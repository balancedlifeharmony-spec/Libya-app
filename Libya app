
<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LibyaApps.com - Apps Made for Libya</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        :root {
            --libya-red: #E70013;
            --libya-green: #239F40;
            --libya-black: #000000;
        }
        
        .app-card {
            transition: all 0.3s ease;
        }
        .app-card:hover {
            transform: translateY(-4px);
        }
        .gradient-bg {
            background: linear-gradient(135deg, var(--libya-red) 0%, var(--libya-green) 100%);
        }
        .glass-effect {
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.1);
        }
        .bg-libya-red {
            background-color: var(--libya-red);
        }
        .hover\:bg-libya-red:hover {
            background-color: #cc0011;
        }
        .focus\:ring-libya-red:focus {
            --tw-ring-color: var(--libya-red);
        }
        /* RTL Support */
        [dir="rtl"] {
            text-align: right;
        }
        [dir="rtl"] .flex {
            flex-direction: row-reverse;
        }
        [dir="rtl"] .grid {
            direction: ltr;
        }
        [dir="rtl"] .grid > * {
            direction: rtl;
        }
    </style>
</head>
<body class="bg-gray-50 dark:bg-gray-900 transition-colors duration-300">
    
    <!-- Header -->
    <header class="gradient-bg text-white">
        <div class="container mx-auto px-4 py-8">
            <div class="flex justify-between items-center mb-6">
                <div></div>
                <div class="flex items-center gap-4">
                    <button onclick="toggleDarkMode()" class="p-2 rounded-lg glass-effect hover:bg-white/20 transition-colors duration-200">
                        <span id="darkModeIcon" class="text-xl">🌙</span>
                    </button>
                </div>
            </div>
            
            <div class="text-center">
                <h1 class="text-4xl md:text-5xl font-bold mb-4">
                    <span>LibyaApps.com</span>
                </h1>
                <p class="text-xl md:text-2xl mb-2 opacity-90">Apps made for Libya. Free. No App Store Needed.</p>
                <p class="text-lg opacity-75">تطبيقات مجانية لليبيا — Applications gratuites pour la Libye</p>
            </div>
        </div>
    </header>

    <!-- Search and Filters -->
    <section class="container mx-auto px-4 py-8">
        <div class="max-w-2xl mx-auto mb-8">
            <div class="relative">
                <input 
                    type="text" 
                    id="searchInput"
                    placeholder="Search apps..."
                    class="w-full px-6 py-4 rounded-2xl border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-900 dark:text-white shadow-lg focus:ring-2 focus:ring-red-600 focus:border-transparent outline-none text-lg"
                >
                <svg class="absolute right-4 top-1/2 transform -translate-y-1/2 w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
            </div>
        </div>

        <!-- Category Filters -->
        <div class="flex flex-wrap justify-center gap-3 mb-8">
            <button class="category-btn px-6 py-3 rounded-full bg-libya-red text-white font-medium hover:bg-libya-red transition-colors duration-200" data-category="all">All</button>
            <button class="category-btn px-6 py-3 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 font-medium hover:bg-libya-red hover:text-white transition-colors duration-200" data-category="finance">Finance</button>
            <button class="category-btn px-6 py-3 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 font-medium hover:bg-libya-red hover:text-white transition-colors duration-200" data-category="utilities">Utilities</button>
            <button class="category-btn px-6 py-3 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 font-medium hover:bg-libya-red hover:text-white transition-colors duration-200" data-category="lifestyle">Lifestyle</button>
            <button class="category-btn px-6 py-3 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 font-medium hover:bg-libya-red hover:text-white transition-colors duration-200" data-category="government">Government</button>
        </div>
    </section>

    <!-- Apps Grid -->
    <section class="container mx-auto px-4 pb-12">
        <div id="appsGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            
            <!-- Currency Exchange -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="finance" onclick="openCurrencyApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-green-100 dark:bg-green-900 rounded-xl flex items-center justify-center text-2xl mr-4">💱</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Currency Exchange</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Convert LYD to major currencies</p>
                    </div>
                </div>
                <span class="text-xs text-green-600 dark:text-green-400 font-medium bg-green-50 dark:bg-green-900/30 px-3 py-1 rounded-full">Live Rates</span>
            </div>

            <!-- Price Watch -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="finance" onclick="openPriceApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-blue-100 dark:bg-blue-900 rounded-xl flex items-center justify-center text-2xl mr-4">📊</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Price Watch</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Track commodity prices in Libya</p>
                    </div>
                </div>
                <span class="text-xs text-blue-600 dark:text-blue-400 font-medium bg-blue-50 dark:bg-blue-900/30 px-3 py-1 rounded-full">Updated Daily</span>
            </div>

            <!-- Clinic Finder -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="lifestyle" onclick="openClinicApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-red-100 dark:bg-red-900 rounded-xl flex items-center justify-center text-2xl mr-4">🏥</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Clinic Finder</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Find medical facilities near you</p>
                    </div>
                </div>
                <span class="text-xs text-red-600 dark:text-red-400 font-medium bg-red-50 dark:bg-red-900/30 px-3 py-1 rounded-full">Emergency Ready</span>
            </div>

            <!-- Job Finder -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="lifestyle" onclick="openJobsApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-purple-100 dark:bg-purple-900 rounded-xl flex items-center justify-center text-2xl mr-4">💼</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Job Finder</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Employment opportunities</p>
                    </div>
                </div>
                <span class="text-xs text-purple-600 dark:text-purple-400 font-medium bg-purple-50 dark:bg-purple-900/30 px-3 py-1 rounded-full">Libya + Global</span>
            </div>

            <!-- Prayer Times -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="lifestyle" onclick="openPrayerApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-cyan-100 dark:bg-cyan-900 rounded-xl flex items-center justify-center text-2xl mr-4">🕌</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Prayer Times</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">أوقات الصلاة لجميع المدن الليبية</p>
                    </div>
                </div>
                <span class="text-xs text-cyan-600 dark:text-cyan-400 font-medium bg-cyan-50 dark:bg-cyan-900/30 px-3 py-1 rounded-full">EN/AR + Countdown</span>
            </div>

            <!-- Weather Forecast -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="utilities" onclick="openWeatherApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-yellow-100 dark:bg-yellow-900 rounded-xl flex items-center justify-center text-2xl mr-4">🌤️</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Weather Forecast</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">7-day forecast for Libya</p>
                    </div>
                </div>
                <span class="text-xs text-yellow-600 dark:text-yellow-400 font-medium bg-yellow-50 dark:bg-yellow-900/30 px-3 py-1 rounded-full">Interactive Map</span>
            </div>

            <!-- Government Websites -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="government" onclick="openGovApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-indigo-100 dark:bg-indigo-900 rounded-xl flex items-center justify-center text-2xl mr-4">🏛️</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Government Websites</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Official government portals</p>
                    </div>
                </div>
                <span class="text-xs text-indigo-600 dark:text-indigo-400 font-medium bg-indigo-50 dark:bg-indigo-900/30 px-3 py-1 rounded-full">Official Links</span>
            </div>

            <!-- Business Directory -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="finance" onclick="openBusinessApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-orange-100 dark:bg-orange-900 rounded-xl flex items-center justify-center text-2xl mr-4">🏢</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Business Directory</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Local business listings</p>
                    </div>
                </div>
                <span class="text-xs text-orange-600 dark:text-orange-400 font-medium bg-orange-50 dark:bg-orange-900/30 px-3 py-1 rounded-full">60+ Companies</span>
            </div>

            <!-- News Filter -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="utilities" onclick="openNewsApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-pink-100 dark:bg-pink-900 rounded-xl flex items-center justify-center text-2xl mr-4">📰</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">News Filter</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Curated news from Libya</p>
                    </div>
                </div>
                <span class="text-xs text-pink-600 dark:text-pink-400 font-medium bg-pink-50 dark:bg-pink-900/30 px-3 py-1 rounded-full">Latest Updates</span>
            </div>

            <!-- Education Hub -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="lifestyle" onclick="openEducationApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-teal-100 dark:bg-teal-900 rounded-xl flex items-center justify-center text-2xl mr-4">🎓</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Education Hub</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Universities and learning resources</p>
                    </div>
                </div>
                <span class="text-xs text-teal-600 dark:text-teal-400 font-medium bg-teal-50 dark:bg-teal-900/30 px-3 py-1 rounded-full">Universities & Courses</span>
            </div>

            <!-- Speed Test -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="utilities" onclick="openSpeedApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-emerald-100 dark:bg-emerald-900 rounded-xl flex items-center justify-center text-2xl mr-4">⚡</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Speed Test</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Test your internet speed</p>
                    </div>
                </div>
                <span class="text-xs text-emerald-600 dark:text-emerald-400 font-medium bg-emerald-50 dark:bg-emerald-900/30 px-3 py-1 rounded-full">Free Test</span>
            </div>

            <!-- Banks & ATMs -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="finance" onclick="openBanksApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-blue-100 dark:bg-blue-900 rounded-xl flex items-center justify-center text-2xl mr-4">🏦</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Banks & ATMs</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Find banks and ATM locations</p>
                    </div>
                </div>
                <span class="text-xs text-blue-600 dark:text-blue-400 font-medium bg-blue-50 dark:bg-blue-900/30 px-3 py-1 rounded-full">20+ Banks + ATM Locator</span>
            </div>

            <!-- Emergency Contacts -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="utilities" onclick="openEmergencyApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-red-100 dark:bg-red-900 rounded-xl flex items-center justify-center text-2xl mr-4">🚨</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Emergency Contacts</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Important emergency numbers</p>
                    </div>
                </div>
                <span class="text-xs text-red-600 dark:text-red-400 font-medium bg-red-50 dark:bg-red-900/30 px-3 py-1 rounded-full">Quick Access</span>
            </div>

            <!-- Translator -->
            <div class="app-card bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl cursor-pointer" data-category="utilities" onclick="openTranslatorApp()">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-purple-100 dark:bg-purple-900 rounded-xl flex items-center justify-center text-2xl mr-4">🌐</div>
                    <div>
                        <h3 class="font-bold text-lg text-gray-900 dark:text-white">Translator</h3>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Multi-language translation tool</p>
                    </div>
                </div>
                <span class="text-xs text-purple-600 dark:text-purple-400 font-medium bg-purple-50 dark:bg-purple-900/30 px-3 py-1 rounded-full">7 UI Languages + RTL</span>
            </div>

        </div>

        <!-- No Results Message -->
        <div id="noResults" class="text-center py-12 hidden">
            <div class="text-6xl mb-4">🔍</div>
            <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">No apps found</h3>
            <p class="text-gray-600 dark:text-gray-400">Try adjusting your search or filter</p>
        </div>
    </section>

    <!-- Footer -->
    <footer class="bg-gray-900 text-white py-12">
        <div class="container mx-auto px-4 text-center">
            <div class="mb-6">
                <h3 class="text-2xl font-bold mb-2">LibyaApps.com</h3>
                <div class="w-24 h-1 bg-red-600 mx-auto rounded"></div>
            </div>
            <p class="text-gray-400 mb-2">© 2025 LibyaApps.com | Powered by Victory Hour Multimedia Inc.™</p>
            <p class="text-gray-400">Made with ❤️ for Libya</p>
        </div>
    </footer>

    <!-- Translator Modal -->
    <div id="translatorModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
        <div class="bg-white dark:bg-gray-800 rounded-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden relative">
            <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white">🌐 Universal Translator</h2>
                <button onclick="closeTranslatorModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <div class="overflow-y-auto max-h-[calc(90vh-80px)]">
                <!-- Translator Widget -->
                <section id="translator-widget" class="translator-widget">
                    <style>
                        .translator-widget {
                            --bg: transparent;
                            --card: #f8fafc;
                            --text: #1e293b;
                            --muted: #64748b;
                            --accent: #3b82f6;
                            --ring: #3b82f633;
                            --border: #e2e8f0;
                            font-family: system-ui, Segoe UI, Inter, Arial, sans-serif;
                            background: var(--bg);
                            color: var(--text);
                            padding: 28px;
                            border-radius: 18px;
                        }
                        .dark .translator-widget {
                            --card: #1e293b;
                            --text: #e2e8f0;
                            --muted: #94a3b8;
                            --accent: #60a5fa;
                            --ring: #60a5fa33;
                            --border: #374151;
                        }
                        .trans-header {
                            display: flex;
                            gap: 12px;
                            flex-wrap: wrap;
                            align-items: center;
                            justify-content: space-between;
                            margin-bottom: 18px;
                        }
                        .trans-title {
                            font-weight: 700;
                            font-size: 1.15rem;
                        }
                        .trans-controls {
                            display: flex;
                            flex-wrap: wrap;
                            gap: 10px;
                        }
                        .trans-select, .trans-btn {
                            background: var(--card);
                            border: 1px solid var(--border);
                            color: var(--text);
                            padding: 10px 12px;
                            border-radius: 12px;
                            outline: none;
                            font-size: 14px;
                        }
                        .trans-select:focus {
                            border-color: var(--accent);
                            box-shadow: 0 0 0 3px var(--ring);
                        }
                        .trans-btn {
                            cursor: pointer;
                            background: var(--accent);
                            color: white;
                            border-color: var(--accent);
                            transition: all 0.2s ease;
                        }
                        .trans-btn:hover {
                            opacity: 0.9;
                        }
                        .trans-main {
                            display: grid;
                            grid-template-columns: 1fr auto 1fr;
                            gap: 16px;
                            align-items: stretch;
                        }
                        .trans-panel {
                            background: var(--card);
                            border: 1px solid var(--border);
                            border-radius: 16px;
                            padding: 16px;
                            display: flex;
                            flex-direction: column;
                            min-height: 300px;
                        }
                        .panel-header {
                            display: flex;
                            justify-content: space-between;
                            align-items: center;
                            margin-bottom: 12px;
                        }
                        .panel-title {
                            font-weight: 600;
                            font-size: 14px;
                            color: var(--muted);
                        }
                        .panel-actions {
                            display: flex;
                            gap: 6px;
                        }
                        .action-btn {
                            background: none;
                            border: none;
                            color: var(--muted);
                            cursor: pointer;
                            padding: 4px;
                            border-radius: 6px;
                            transition: all 0.2s ease;
                        }
                        .action-btn:hover {
                            color: var(--accent);
                            background: var(--ring);
                        }
                        .trans-textarea {
                            background: transparent;
                            border: none;
                            color: var(--text);
                            resize: none;
                            outline: none;
                            flex: 1;
                            font-size: 16px;
                            line-height: 1.5;
                            font-family: inherit;
                        }
                        .trans-textarea::placeholder {
                            color: var(--muted);
                        }
                        .swap-btn {
                            background: var(--card);
                            border: 1px solid var(--border);
                            border-radius: 50%;
                            width: 48px;
                            height: 48px;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            cursor: pointer;
                            transition: all 0.2s ease;
                            align-self: center;
                        }
                        .swap-btn:hover {
                            border-color: var(--accent);
                            background: var(--accent);
                            color: white;
                            transform: rotate(180deg);
                        }
                        .char-count {
                            font-size: 12px;
                            color: var(--muted);
                            text-align: right;
                            margin-top: 8px;
                        }
                        .quick-phrases {
                            margin-top: 20px;
                            padding-top: 20px;
                            border-top: 1px solid var(--border);
                        }
                        .quick-title {
                            font-weight: 600;
                            margin-bottom: 12px;
                            color: var(--text);
                        }
                        .phrase-grid {
                            display: grid;
                            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                            gap: 8px;
                        }
                        .phrase-btn {
                            background: var(--card);
                            border: 1px solid var(--border);
                            color: var(--text);
                            padding: 8px 12px;
                            border-radius: 8px;
                            cursor: pointer;
                            text-align: left;
                            font-size: 13px;
                            transition: all 0.2s ease;
                        }
                        .phrase-btn:hover {
                            border-color: var(--accent);
                            background: var(--ring);
                        }
                        .trans-footer {
                            margin-top: 16px;
                            padding-top: 16px;
                            border-top: 1px solid var(--border);
                            font-size: 12px;
                            color: var(--muted);
                            text-align: center;
                        }
                        .rtl {
                            direction: rtl;
                            text-align: right;
                        }
                        @media (max-width: 768px) {
                            .trans-main {
                                grid-template-columns: 1fr;
                                grid-template-rows: auto auto auto;
                            }
                            .swap-btn {
                                justify-self: center;
                                transform: rotate(90deg);
                            }
                            .swap-btn:hover {
                                transform: rotate(270deg);
                            }
                        }
                    </style>

                    <div class="trans-header">
                        <div class="trans-title" id="trans-title">Universal Translator</div>
                        <div class="trans-controls">
                            <select id="uiLang" class="trans-select" title="Interface Language">
                                <option value="en">English UI</option>
                                <option value="ar">واجهة عربية</option>
                                <option value="fr">Interface Français</option>
                                <option value="es">Interfaz Español</option>
                                <option value="de">Deutsche Oberfläche</option>
                                <option value="it">Interfaccia Italiana</option>
                                <option value="tr">Türkçe Arayüz</option>
                            </select>
                            <button id="clearAll" class="trans-btn">🗑️ Clear</button>
                            <button id="detectLang" class="trans-btn">🔍 Detect</button>
                        </div>
                    </div>

                    <div class="trans-main">
                        <!-- Input Panel -->
                        <div class="trans-panel">
                            <div class="panel-header">
                                <div class="panel-title" id="inputTitle">Input Text</div>
                                <div class="panel-actions">
                                    <button class="action-btn" id="pasteBtn" title="Paste">📋</button>
                                    <button class="action-btn" id="clearInput" title="Clear">🗑️</button>
                                    <button class="action-btn" id="listenInput" title="Listen">🔊</button>
                                </div>
                            </div>
                            <select id="fromLang" class="trans-select" style="margin-bottom: 12px;">
                                <option value="auto">🔍 Auto-detect</option>
                                <option value="en">🇺🇸 English</option>
                                <option value="ar">🇸🇦 العربية (Arabic)</option>
                                <option value="fr">🇫🇷 Français (French)</option>
                                <option value="es">🇪🇸 Español (Spanish)</option>
                                <option value="de">🇩🇪 Deutsch (German)</option>
                                <option value="it">🇮🇹 Italiano (Italian)</option>
                                <option value="pt">🇵🇹 Português (Portuguese)</option>
                                <option value="ru">🇷🇺 Русский (Russian)</option>
                                <option value="zh">🇨🇳 中文 (Chinese)</option>
                                <option value="ja">🇯🇵 日本語 (Japanese)</option>
                                <option value="ko">🇰🇷 한국어 (Korean)</option>
                                <option value="tr">🇹🇷 Türkçe (Turkish)</option>
                                <option value="hi">🇮🇳 हिन्दी (Hindi)</option>
                                <option value="ur">🇵🇰 اردو (Urdu)</option>
                                <option value="fa">🇮🇷 فارسی (Persian)</option>
                            </select>
                            <textarea 
                                id="inputText" 
                                class="trans-textarea" 
                                placeholder="Enter text to translate..."
                                maxlength="5000"
                            ></textarea>
                            <div class="char-count" id="inputCount">0 / 5000</div>
                        </div>

                        <!-- Swap Button -->
                        <button class="swap-btn" id="swapLangs" title="Swap languages">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z"/>
                            </svg>
                        </button>

                        <!-- Output Panel -->
                        <div class="trans-panel">
                            <div class="panel-header">
                                <div class="panel-title" id="outputTitle">Translation</div>
                                <div class="panel-actions">
                                    <button class="action-btn" id="copyBtn" title="Copy">📄</button>
                                    <button class="action-btn" id="shareBtn" title="Share">📤</button>
                                    <button class="action-btn" id="listenOutput" title="Listen">🔊</button>
                                </div>
                            </div>
                            <select id="toLang" class="trans-select" style="margin-bottom: 12px;">
                                <option value="en">🇺🇸 English</option>
                                <option value="ar" selected>🇸🇦 العربية (Arabic)</option>
                                <option value="fr">🇫🇷 Français (French)</option>
                                <option value="es">🇪🇸 Español (Spanish)</option>
                                <option value="de">🇩🇪 Deutsch (German)</option>
                                <option value="it">🇮🇹 Italiano (Italian)</option>
                                <option value="pt">🇵🇹 Português (Portuguese)</option>
                                <option value="ru">🇷🇺 Русский (Russian)</option>
                                <option value="zh">🇨🇳 中文 (Chinese)</option>
                                <option value="ja">🇯🇵 日本語 (Japanese)</option>
                                <option value="ko">🇰🇷 한국어 (Korean)</option>
                                <option value="tr">🇹🇷 Türkçe (Turkish)</option>
                                <option value="hi">🇮🇳 हिन्दी (Hindi)</option>
                                <option value="ur">🇵🇰 اردو (Urdu)</option>
                                <option value="fa">🇮🇷 فارسی (Persian)</option>
                            </select>
                            <textarea 
                                id="outputText" 
                                class="trans-textarea" 
                                placeholder="Translation will appear here..."
                                readonly
                            ></textarea>
                            <div class="char-count" id="outputCount">Ready to translate</div>
                        </div>
                    </div>

                    <!-- Quick Phrases -->
                    <div class="quick-phrases">
                        <div class="quick-title" id="phrasesTitle">Quick Phrases</div>
                        <div class="phrase-grid" id="phraseGrid">
                            <!-- Phrases will be populated by JavaScript -->
                        </div>
                    </div>

                    <div class="trans-footer">
                        <div>🌐 Supports 15+ languages with RTL text direction • Built for Libya</div>
                        <div>Note: This demo uses basic translation. For production, integrate with Google Translate API or similar service.</div>
                    </div>

                    <script>
                        function initTranslator() {
                            console.log("Initializing Translator widget...");

                            // UI Strings for different languages
                            const UI_STRINGS = {
                                en: {
                                    title: "Universal Translator",
                                    inputTitle: "Input Text",
                                    outputTitle: "Translation",
                                    phrasesTitle: "Quick Phrases",
                                    inputPlaceholder: "Enter text to translate...",
                                    outputPlaceholder: "Translation will appear here...",
                                    detecting: "Detecting language...",
                                    translating: "Translating...",
                                    ready: "Ready to translate",
                                    copied: "Copied to clipboard!",
                                    phrases: [
                                        "Hello, how are you?",
                                        "Thank you very much",
                                        "Excuse me, where is...?",
                                        "I don't understand",
                                        "Can you help me?",
                                        "What time is it?",
                                        "How much does this cost?",
                                        "I'm looking for...",
                                        "Nice to meet you",
                                        "Have a good day",
                                        "Yes / No",
                                        "Please / You're welcome"
                                    ]
                                },
                                ar: {
                                    title: "المترجم العالمي",
                                    inputTitle: "النص المدخل",
                                    outputTitle: "الترجمة",
                                    phrasesTitle: "عبارات سريعة",
                                    inputPlaceholder: "أدخل النص للترجمة...",
                                    outputPlaceholder: "ستظهر الترجمة هنا...",
                                    detecting: "جاري اكتشاف اللغة...",
                                    translating: "جاري الترجمة...",
                                    ready: "جاهز للترجمة",
                                    copied: "تم النسخ!",
                                    phrases: [
                                        "مرحبا، كيف حالك؟",
                                        "شكرا جزيلا",
                                        "عذرا، أين...؟",
                                        "لا أفهم",
                                        "هل يمكنك مساعدتي؟",
                                        "كم الساعة؟",
                                        "كم يكلف هذا؟",
                                        "أبحث عن...",
                                        "تشرفنا بلقائك",
                                        "يوم سعيد",
                                        "نعم / لا",
                                        "من فضلك / عفواً"
                                    ]
                                },
                                fr: {
                                    title: "Traducteur Universel",
                                    inputTitle: "Texte d'entrée",
                                    outputTitle: "Traduction",
                                    phrasesTitle: "Phrases Rapides",
                                    inputPlaceholder: "Entrez le texte à traduire...",
                                    outputPlaceholder: "La traduction apparaîtra ici...",
                                    detecting: "Détection de la langue...",
                                    translating: "Traduction en cours...",
                                    ready: "Prêt à traduire",
                                    copied: "Copié dans le presse-papiers!",
                                    phrases: [
                                        "Bonjour, comment allez-vous?",
                                        "Merci beaucoup",
                                        "Excusez-moi, où est...?",
                                        "Je ne comprends pas",
                                        "Pouvez-vous m'aider?",
                                        "Quelle heure est-il?",
                                        "Combien ça coûte?",
                                        "Je cherche...",
                                        "Enchanté de vous rencontrer",
                                        "Bonne journée",
                                        "Oui / Non",
                                        "S'il vous plaît / De rien"
                                    ]
                                }
                            };

                            // Basic translation dictionaries (demo purposes)
                            const TRANSLATIONS = {
                                "hello": { ar: "مرحبا", fr: "bonjour", es: "hola", de: "hallo" },
                                "thank you": { ar: "شكرا", fr: "merci", es: "gracias", de: "danke" },
                                "yes": { ar: "نعم", fr: "oui", es: "sí", de: "ja" },
                                "no": { ar: "لا", fr: "non", es: "no", de: "nein" },
                                "please": { ar: "من فضلك", fr: "s'il vous plaît", es: "por favor", de: "bitte" },
                                "excuse me": { ar: "عذرا", fr: "excusez-moi", es: "disculpe", de: "entschuldigung" },
                                "how are you": { ar: "كيف حالك", fr: "comment allez-vous", es: "¿cómo está?", de: "wie geht es dir" },
                                "good morning": { ar: "صباح الخير", fr: "bonjour", es: "buenos días", de: "guten morgen" },
                                "good evening": { ar: "مساء الخير", fr: "bonsoir", es: "buenas tardes", de: "guten abend" },
                                "goodbye": { ar: "وداعا", fr: "au revoir", es: "adiós", de: "auf wiedersehen" }
                            };

                            // RTL languages
                            const RTL_LANGS = ['ar', 'ur', 'fa', 'he'];

                            // Get elements
                            const elements = {
                                title: document.getElementById('trans-title'),
                                inputTitle: document.getElementById('inputTitle'),
                                outputTitle: document.getElementById('outputTitle'),
                                phrasesTitle: document.getElementById('phrasesTitle'),
                                inputText: document.getElementById('inputText'),
                                outputText: document.getElementById('outputText'),
                                fromLang: document.getElementById('fromLang'),
                                toLang: document.getElementById('toLang'),
                                uiLang: document.getElementById('uiLang'),
                                inputCount: document.getElementById('inputCount'),
                                outputCount: document.getElementById('outputCount'),
                                phraseGrid: document.getElementById('phraseGrid'),
                                swapLangs: document.getElementById('swapLangs'),
                                clearAll: document.getElementById('clearAll'),
                                detectLang: document.getElementById('detectLang'),
                                pasteBtn: document.getElementById('pasteBtn'),
                                copyBtn: document.getElementById('copyBtn'),
                                clearInput: document.getElementById('clearInput'),
                                shareBtn: document.getElementById('shareBtn'),
                                listenInput: document.getElementById('listenInput'),
                                listenOutput: document.getElementById('listenOutput')
                            };

                            // Check if elements exist
                            if (!elements.inputText || !elements.outputText) {
                                console.error("Translator elements not found");
                                return;
                            }

                            let currentUILang = 'en';
                            let isTranslating = false;

                            // Update UI language
                            function updateUI() {
                                const strings = UI_STRINGS[currentUILang] || UI_STRINGS.en;
                                
                                if (elements.title) elements.title.textContent = strings.title;
                                if (elements.inputTitle) elements.inputTitle.textContent = strings.inputTitle;
                                if (elements.outputTitle) elements.outputTitle.textContent = strings.outputTitle;
                                if (elements.phrasesTitle) elements.phrasesTitle.textContent = strings.phrasesTitle;
                                if (elements.inputText) elements.inputText.placeholder = strings.inputPlaceholder;
                                if (elements.outputText) elements.outputText.placeholder = strings.outputPlaceholder;
                                if (elements.outputCount && !isTranslating) elements.outputCount.textContent = strings.ready;

                                // Update quick phrases
                                updateQuickPhrases();
                                
                                // Update RTL direction
                                updateTextDirection();
                            }

                            // Update text direction based on selected languages
                            function updateTextDirection() {
                                const fromLang = elements.fromLang ? elements.fromLang.value : 'en';
                                const toLang = elements.toLang ? elements.toLang.value : 'ar';
                                
                                if (elements.inputText) {
                                    elements.inputText.className = RTL_LANGS.includes(fromLang) ? 'trans-textarea rtl' : 'trans-textarea';
                                }
                                if (elements.outputText) {
                                    elements.outputText.className = RTL_LANGS.includes(toLang) ? 'trans-textarea rtl' : 'trans-textarea';
                                }
                            }

                            // Update quick phrases
                            function updateQuickPhrases() {
                                if (!elements.phraseGrid) return;
                                
                                const strings = UI_STRINGS[currentUILang] || UI_STRINGS.en;
                                elements.phraseGrid.innerHTML = '';
                                
                                strings.phrases.forEach(phrase => {
                                    const btn = document.createElement('button');
                                    btn.className = 'phrase-btn';
                                    btn.textContent = phrase;
                                    btn.onclick = () => {
                                        if (elements.inputText) {
                                            elements.inputText.value = phrase;
                                            updateCharCount();
                                            translateText();
                                        }
                                    };
                                    elements.phraseGrid.appendChild(btn);
                                });
                            }

                            // Simple translation function (demo)
                            function translateText() {
                                if (!elements.inputText || !elements.outputText) return;
                                
                                const text = elements.inputText.value.trim();
                                if (!text) {
                                    elements.outputText.value = '';
                                    if (elements.outputCount) elements.outputCount.textContent = UI_STRINGS[currentUILang].ready;
                                    return;
                                }

                                const toLang = elements.toLang ? elements.toLang.value : 'ar';
                                isTranslating = true;
                                
                                if (elements.outputCount) elements.outputCount.textContent = UI_STRINGS[currentUILang].translating;

                                // Simulate translation delay
                                setTimeout(() => {
                                    const lowerText = text.toLowerCase();
                                    let translation = text; // Default: return original text

                                    // Basic translation using dictionary
                                    for (const [key, translations] of Object.entries(TRANSLATIONS)) {
                                        if (lowerText.includes(key) && translations[toLang]) {
                                            translation = translation.replace(new RegExp(key, 'gi'), translations[toLang]);
                                        }
                                    }

                                    // If no translation found and target is Arabic, add Arabic suffix
                                    if (translation === text && toLang === 'ar') {
                                        translation = `${text} (مترجم)`;
                                    }

                                    elements.outputText.value = translation;
                                    isTranslating = false;
                                    if (elements.outputCount) elements.outputCount.textContent = `${translation.length} chars`;
                                    updateTextDirection();
                                }, 500);
                            }

                            // Update character count
                            function updateCharCount() {
                                if (elements.inputText && elements.inputCount) {
                                    const count = elements.inputText.value.length;
                                    elements.inputCount.textContent = `${count} / 5000`;
                                }
                            }

                            // Event listeners
                            if (elements.uiLang) {
                                elements.uiLang.addEventListener('change', () => {
                                    currentUILang = elements.uiLang.value;
                                    updateUI();
                                });
                            }

                            if (elements.inputText) {
                                elements.inputText.addEventListener('input', () => {
                                    updateCharCount();
                                    clearTimeout(window.translateTimer);
                                    window.translateTimer = setTimeout(translateText, 300);
                                });
                            }

                            if (elements.fromLang) {
                                elements.fromLang.addEventListener('change', updateTextDirection);
                            }

                            if (elements.toLang) {
                                elements.toLang.addEventListener('change', () => {
                                    updateTextDirection();
                                    translateText();
                                });
                            }

                            if (elements.swapLangs) {
                                elements.swapLangs.addEventListener('click', () => {
                                    if (elements.fromLang && elements.toLang && elements.inputText && elements.outputText) {
                                        const fromVal = elements.fromLang.value;
                                        const toVal = elements.toLang.value;
                                        const inputVal = elements.inputText.value;
                                        const outputVal = elements.outputText.value;

                                        if (fromVal !== 'auto') {
                                            elements.fromLang.value = toVal;
                                            elements.toLang.value = fromVal;
                                            elements.inputText.value = outputVal;
                                            elements.outputText.value = inputVal;
                                            updateCharCount();
                                            updateTextDirection();
                                        }
                                    }
                                });
                            }

                            if (elements.clearAll) {
                                elements.clearAll.addEventListener('click', () => {
                                    if (elements.inputText) elements.inputText.value = '';
                                    if (elements.outputText) elements.outputText.value = '';
                                    updateCharCount();
                                    if (elements.outputCount) elements.outputCount.textContent = UI_STRINGS[currentUILang].ready;
                                });
                            }

                            if (elements.copyBtn) {
                                elements.copyBtn.addEventListener('click', async () => {
                                    if (elements.outputText && elements.outputText.value) {
                                        try {
                                            await navigator.clipboard.writeText(elements.outputText.value);
                                            const originalText = elements.outputCount.textContent;
                                            elements.outputCount.textContent = UI_STRINGS[currentUILang].copied;
                                            setTimeout(() => {
                                                elements.outputCount.textContent = originalText;
                                            }, 2000);
                                        } catch (err) {
                                            console.error('Copy failed:', err);
                                        }
                                    }
                                });
                            }

                            if (elements.pasteBtn) {
                                elements.pasteBtn.addEventListener('click', async () => {
                                    try {
                                        const text = await navigator.clipboard.readText();
                                        if (elements.inputText) {
                                            elements.inputText.value = text;
                                            updateCharCount();
                                            translateText();
                                        }
                                    } catch (err) {
                                        console.error('Paste failed:', err);
                                    }
                                });
                            }

                            if (elements.clearInput) {
                                elements.clearInput.addEventListener('click', () => {
                                    if (elements.inputText) {
                                        elements.inputText.value = '';
                                        updateCharCount();
                                        if (elements.outputText) elements.outputText.value = '';
                                        if (elements.outputCount) elements.outputCount.textContent = UI_STRINGS[currentUILang].ready;
                                    }
                                });
                            }

                            // Text-to-speech functionality
                            if (elements.listenInput) {
                                elements.listenInput.addEventListener('click', () => {
                                    if (elements.inputText && elements.inputText.value && 'speechSynthesis' in window) {
                                        const utterance = new SpeechSynthesisUtterance(elements.inputText.value);
                                        const fromLang = elements.fromLang ? elements.fromLang.value : 'en';
                                        if (fromLang !== 'auto') utterance.lang = fromLang;
                                        speechSynthesis.speak(utterance);
                                    }
                                });
                            }

                            if (elements.listenOutput) {
                                elements.listenOutput.addEventListener('click', () => {
                                    if (elements.outputText && elements.outputText.value && 'speechSynthesis' in window) {
                                        const utterance = new SpeechSynthesisUtterance(elements.outputText.value);
                                        const toLang = elements.toLang ? elements.toLang.value : 'ar';
                                        utterance.lang = toLang;
                                        speechSynthesis.speak(utterance);
                                    }
                                });
                            }

                            // Initialize
                            updateUI();
                            updateCharCount();
                            console.log("Translator widget initialized successfully!");
                        }

                        // Store function globally
                        window.initTranslator = initTranslator;
                    </script>
                </section>
            </div>
        </div>
    </div>

    <!-- Business Directory Modal -->
    <div id="businessModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
        <div class="bg-white dark:bg-gray-800 rounded-2xl max-w-7xl w-full max-h-[95vh] overflow-hidden relative">
            <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white">🏢 Libya Business Directory</h2>
                <button onclick="closeBusinessModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <div class="overflow-y-auto max-h-[calc(95vh-80px)]">
                <!-- Business Directory Content -->
                <div class="p-6">
                    <style>
                        .business-directory {
                            --bg: transparent;
                            --card: #f8fafc;
                            --muted: #64748b;
                            --text: #1e293b;
                            --accent: #059669;
                            --chip: #f1f5f9;
                            --border: #e2e8f0;
                        }
                        .dark .business-directory {
                            --card: #1e293b;
                            --text: #e2e8f0;
                            --muted: #94a3b8;
                            --accent: #10b981;
                            --chip: #334155;
                            --border: #374151;
                        }
                        .business-directory * { box-sizing: border-box; }
                        .business-directory .toolbar {
                            display: grid;
                            gap: 10px;
                            grid-template-columns: 1fr;
                            margin-top: 16px;
                        }
                        .business-directory .tool-row {
                            display: flex;
                            flex-wrap: wrap;
                            gap: 10px;
                        }
                        .business-directory input[type="search"],
                        .business-directory select {
                            background: var(--card);
                            border: 1px solid var(--border);
                            color: var(--text);
                            padding: 12px 14px;
                            border-radius: 12px;
                            flex: 1;
                            min-width: 220px;
                            outline: none;
                        }
                        .business-directory input:focus,
                        .business-directory select:focus {
                            border-color: var(--accent);
                            box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
                        }
                        .business-directory .chips {
                            display: flex;
                            flex-wrap: wrap;
                            gap: 8px;
                        }
                        .business-directory .chip {
                            background: var(--chip);
                            color: var(--muted);
                            border: 1px solid var(--border);
                            padding: 8px 12px;
                            border-radius: 999px;
                            font-size: 13px;
                            cursor: pointer;
                            user-select: none;
                            transition: all 0.2s ease;
                        }
                        .business-directory .chip.active {
                            background: var(--accent);
                            color: white;
                            border-color: var(--accent);
                        }
                        .business-directory .count {
                            color: var(--muted);
                            font-size: 13px;
                            margin: 8px 0 18px;
                        }
                        .business-directory .grid {
                            display: grid;
                            grid-template-columns: repeat(1, minmax(0, 1fr));
                            gap: 14px;
                        }
                        @media(min-width: 700px) {
                            .business-directory .toolbar { grid-template-columns: 2fr 1fr; }
                            .business-directory .grid { grid-template-columns: repeat(2, minmax(0, 1fr)); }
                        }
                        @media(min-width: 1024px) {
                            .business-directory .grid { grid-template-columns: repeat(3, minmax(0, 1fr)); }
                        }
                        .business-directory .card {
                            background: var(--card);
                            border: 1px solid var(--border);
                            border-radius: 16px;
                            padding: 16px;
                            display: flex;
                            gap: 12px;
                            flex-direction: column;
                            min-height: 160px;
                            transition: transform 0.2s ease, border-color 0.2s ease;
                        }
                        .business-directory .card:hover {
                            transform: translateY(-2px);
                            border-color: var(--accent);
                        }
                        .business-directory .name {
                            font-weight: 700;
                            font-size: 16px;
                            line-height: 1.2;
                            color: var(--text);
                        }
                        .business-directory .meta {
                            display: flex;
                            gap: 8px;
                            flex-wrap: wrap;
                        }
                        .business-directory .tag {
                            font-size: 12px;
                            background: var(--chip);
                            border: 1px solid var(--border);
                            color: var(--muted);
                            padding: 5px 8px;
                            border-radius: 999px;
                        }
                        .business-directory .desc {
                            color: var(--muted);
                            font-size: 13px;
                        }
                        .business-directory .actions {
                            display: flex;
                            gap: 8px;
                            flex-wrap: wrap;
                            margin-top: auto;
                        }
                        .business-directory .btn {
                            appearance: none;
                            border: 1px solid var(--border);
                            background: var(--card);
                            color: var(--text);
                            padding: 9px 12px;
                            border-radius: 10px;
                            font-size: 13px;
                            text-decoration: none;
                            display: inline-flex;
                            gap: 8px;
                            align-items: center;
                            cursor: pointer;
                            transition: all 0.2s ease;
                        }
                        .business-directory .btn:hover {
                            border-color: var(--accent);
                            background: var(--accent);
                            color: white;
                        }
                        .business-directory .btn.primary {
                            background: var(--accent);
                            border-color: var(--accent);
                            color: white;
                        }
                        .business-directory .footer-card {
                            margin-top: 26px;
                        }
                        .business-directory form {
                            display: grid;
                            gap: 10px;
                        }
                        .business-directory form .row {
                            display: grid;
                            grid-template-columns: 1fr;
                            gap: 10px;
                        }
                        @media(min-width: 700px) {
                            .business-directory form .row { grid-template-columns: 1fr 1fr; }
                        }
                        .business-directory input,
                        .business-directory textarea {
                            background: var(--card);
                            border: 1px solid var(--border);
                            color: var(--text);
                            padding: 12px 14px;
                            border-radius: 12px;
                            outline: none;
                        }
                        .business-directory textarea {
                            min-height: 90px;
                            resize: vertical;
                        }
                        .business-directory .note {
                            font-size: 12px;
                            color: var(--muted);
                        }
                        .business-directory .credits {
                            color: var(--muted);
                            font-size: 12px;
                            margin: 18px 0 36px;
                        }
                    </style>

                    <div class="business-directory">
                        <header class="mb-6">
                            <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">Libya Business Directory</h1>
                            <div class="text-gray-600 dark:text-gray-300 text-sm">Searchable, filterable directory of Libyan businesses by sector. Additions welcome at the bottom.</div>
                            <div class="toolbar">
                                <div class="tool-row">
                                    <input id="biz-q" type="search" placeholder="Search by name, website, or keywords…" />
                                    <select id="biz-city">
                                        <option value="">All cities</option>
                                        <option>Tripoli</option>
                                        <option>Benghazi</option>
                                        <option>Misurata</option>
                                        <option>Sirte</option>
                                        <option>Derna</option>
                                        <option>Bayda</option>
                                        <option>Sabha</option>
                                    </select>
                                    <select id="biz-sort">
                                        <option value="name">Sort: A → Z</option>
                                        <option value="sector">Sort: Sector</option>
                                        <option value="city">Sort: City</option>
                                    </select>
                                </div>
                                <div class="chips" id="biz-sector-chips"></div>
                            </div>
                        </header>

                        <main>
                            <div class="count" id="biz-count"></div>
                            <section class="grid" id="biz-cards"></section>

                            <div class="card footer-card">
                                <h2 class="name">Add your business</h2>
                                <div class="desc">Fill this quick form — it will open a pre-filled email to <strong>info@victoryhourmedia.com</strong>. We'll review and add you.</div>
                                <form id="biz-add-form">
                                    <div class="row">
                                        <input required id="biz_f_name" placeholder="Business name *" />
                                        <input required id="biz_f_sector" placeholder="Sector * (e.g., Oil & Gas, Telecom, Banking)" />
                                    </div>
                                    <div class="row">
                                        <input id="biz_f_city" placeholder="City (Tripoli, Benghazi, etc.)" />
                                        <input id="biz_f_website" placeholder="Website (https://…)" />
                                    </div>
                                    <div class="row">
                                        <input id="biz_f_phone" placeholder="Phone (+218…)" />
                                        <input id="biz_f_email" placeholder="Public email (info@…)" />
                                    </div>
                                    <textarea id="biz_f_desc" placeholder="Short description / products / notes"></textarea>
                                    <div class="actions">
                                        <button class="btn primary" type="submit">Send add-request email</button>
                                        <div class="note">No attachments? Paste links in the description. We'll verify before publishing.</div>
                                    </div>
                                </form>
                            </div>

                            <div class="credits">Built for Libya. Data last seeded Aug 15, 2025. Add more companies anytime using the form.</div>
                        </main>
                    </div>
                </div>

                <script>
                    function initBusinessDirectory() {
                        console.log("Initializing Business Directory...");

                        // ---------- Seed data ----------
                        const businesses = [
                            // Oil & Gas
                            {name:"National Oil Corporation (NOC)", sector:"Oil & Gas", city:"Tripoli", website:"https://noc.ly", email:"", phone:"", notes:"State oil company"},
                            {name:"Brega Petroleum Marketing Co.", sector:"Oil & Gas", city:"Tripoli", website:"https://brega.ly", email:"", phone:""},
                            {name:"Ras Lanuf Oil & Gas Manufacturing Co. (RASCO)", sector:"Oil & Gas", city:"Tripoli / Ras Lanuf", website:"https://raslanuf.ly", email:"info@rasco.ly", phone:"+21854000000"},
                            {name:"Sirte Oil Company", sector:"Oil & Gas", city:"Brega", website:"http://www.sirteoil.com.ly", email:"", phone:""},
                            {name:"Zueitina Oil Company", sector:"Oil & Gas", city:"Tripoli", website:"https://www.zueitina.com.ly", email:"info@zueitina.com", phone:"+218-21-444-0956"},
                            {name:"Harouge Oil Operations", sector:"Oil & Gas", city:"Tripoli", website:"https://www.harouge.com", email:"", phone:""},
                            {name:"Akakus Oil Operations", sector:"Oil & Gas", city:"Tripoli", website:"https://www.akakusoil.com", email:"", phone:""},
                            {name:"Mellitah Oil & Gas", sector:"Oil & Gas", city:"Tripoli", website:"https://www.mellitahog.com.ly", email:"", phone:""},
                            {name:"Waha Oil Company", sector:"Oil & Gas", city:"Tripoli", website:"https://www.wahaoil.ly", email:"", phone:""},
                            {name:"Jowfe Oil Technology", sector:"Oil & Gas", city:"Brega", website:"https://jowfe.ly", email:"", phone:""},
                            {name:"Nafusah Oil Operations", sector:"Oil & Gas", city:"Tripoli", website:"https://nafusah.com", email:"", phone:""},
                            {name:"Zawia Oil Refining Company (ARC)", sector:"Oil & Gas", city:"Az Zawiyah", website:"http://www.arc.com.ly", email:"", phone:""},
                            {name:"National Oil Wells Drilling & Workover Co.", sector:"Oil & Gas", city:"Tripoli", website:"https://nwd.ly", email:"", phone:""},
                            {name:"Taknia Libya Engineering", sector:"Oil & Gas", city:"Tripoli", website:"https://taknia.ly", email:"", phone:""},
                            {name:"LIFECO – Libyan Fertilizer Company", sector:"Oil & Gas", city:"Brega", website:"https://lifeco.com.ly", email:"", phone:""},

                            // Telecom & IT
                            {name:"Libyana", sector:"Telecom & IT", city:"Tripoli", website:"https://www.libyana.ly", email:"", phone:""},
                            {name:"Almadar Aljadid", sector:"Telecom & IT", city:"Tripoli", website:"https://www.almadar.ly", email:"", phone:""},
                            {name:"Libya Telecom & Technology (LTT)", sector:"Telecom & IT", city:"Tripoli", website:"https://www.ltt.ly", email:"", phone:""},
                            {name:"LITC – Libyan International Telecom", sector:"Telecom & IT", city:"Tripoli", website:"https://www.litc.ly", email:"", phone:""},
                            {name:"LPTIC Holding", sector:"Telecom & IT", city:"Tripoli", website:"https://lptic.ly", email:"", phone:""},
                            {name:"Libya Post", sector:"Telecom & IT", city:"Tripoli", website:"https://libyapost.ly", email:"", phone:""},
                            {name:"Libyan Spider (Cloud/Hosting)", sector:"Telecom & IT", city:"Tripoli", website:"https://libyanspider.com", email:"", phone:""},
                            {name:"Masarat (IT & Fintech Services)", sector:"Telecom & IT", city:"Tripoli", website:"https://masarat.ly", email:"", phone:""},

                            // Airlines
                            {name:"Afriqiyah Airways", sector:"Airlines", city:"Tripoli", website:"https://www.afriqiyah.aero", email:"", phone:""},
                            {name:"Libyan Airlines", sector:"Airlines", city:"Tripoli / Benghazi", website:"https://www.libyanairlines.aero", email:"", phone:""},
                            {name:"Berniq Airways", sector:"Airlines", city:"Benghazi", website:"https://www.berniq.aero", email:"", phone:""},
                            {name:"Buraq Air", sector:"Airlines", city:"Tripoli", website:"https://www.buraq.aero", email:"", phone:""},
                            {name:"Libyan Wings", sector:"Airlines", city:"Tripoli", website:"https://www.libyanwings.aero", email:"", phone:""},
                            {name:"Air Libya", sector:"Airlines", city:"Benghazi", website:"https://airlibya.aero", email:"", phone:""},

                            // Banking & Finance
                            {name:"Jumhouria Bank", sector:"Banking & Finance", city:"Tripoli", website:"https://www.jbank.ly", email:"", phone:""},
                            {name:"Wahda Bank", sector:"Banking & Finance", city:"Benghazi", website:"https://www.wahdabank.com.ly", email:"", phone:""},
                            {name:"Bank of Commerce & Development (BCD)", sector:"Banking & Finance", city:"Benghazi", website:"https://www.bcd.ly", email:"", phone:""},
                            {name:"Aman Bank", sector:"Banking & Finance", city:"Tripoli", website:"https://www.aman-bank.com", email:"", phone:""},
                            {name:"Sahara Bank", sector:"Banking & Finance", city:"Tripoli", website:"https://saharabank.ly", email:"", phone:""},
                            {name:"UBCI – United Bank for Commerce & Investment", sector:"Banking & Finance", city:"Tripoli", website:"https://www.ubci-libya.com/En/", email:"", phone:""},

                            // Utilities & Logistics
                            {name:"GECOL – General Electricity Company of Libya", sector:"Utilities & Logistics", city:"Tripoli", website:"https://www.gecol.ly", email:"", phone:""},
                            {name:"Libyan Ports Company (LPC)", sector:"Utilities & Logistics", city:"Tripoli", website:"https://www.lpclibya.com", email:"", phone:""},
                            {name:"GNMTC – General National Maritime Transport Co.", sector:"Utilities & Logistics", city:"Tripoli", website:"http://www.gnmtc.com", email:"", phone:""},
                            {name:"ASAS Libya Shipping", sector:"Utilities & Logistics", city:"Tripoli", website:"https://www.libyashipping.com", email:"", phone:""},
                            {name:"Al Watania Modern Shipping", sector:"Utilities & Logistics", city:"Tripoli", website:"https://www.alwataniashipping.net", email:"", phone:""},

                            // Manufacturing & FMCG
                            {name:"Libyan Iron & Steel Company (LISCO)", sector:"Manufacturing & FMCG", city:"Misurata", website:"https://libyansteel.com", email:"", phone:""},
                            {name:"Al-Naseem Food Industries", sector:"Manufacturing & FMCG", city:"Misurata", website:"https://alnaseemdairy.com", email:"info@alnaseemdairy.com", phone:"+218-51-262-4381"},
                            {name:"Libyan Cement Company (LCC)", sector:"Manufacturing & FMCG", city:"Benghazi", website:"https://lcc.ly", email:"", phone:""},
                            {name:"Al-Ahlia Cement Company", sector:"Manufacturing & FMCG", city:"Al Khums", website:"https://ahcc.ly", email:"", phone:""},

                            // Insurance
                            {name:"Libya Insurance Company", sector:"Insurance", city:"Tripoli", website:"https://www.libtamin.ly", email:"", phone:""},
                            {name:"Sahara Insurance Company", sector:"Insurance", city:"Tripoli", website:"https://sic.ly", email:"Info@sic.ly", phone:"+218-21-7131115"},
                            {name:"International Insurance Company (INC)", sector:"Insurance", city:"Tripoli", website:"https://www.inc.com.ly", email:"", phone:""},
                            {name:"Muttahida (United) Insurance", sector:"Insurance", city:"Tripoli", website:"https://muttahida.ly", email:"", phone:""},
                            {name:"Auras Insurance (Travel)", sector:"Insurance", city:"Tripoli", website:"https://auras.insure/en-LY/", email:"", phone:""}
                        ];

                        // ---------- UI / Filtering ----------
                        const elQ = document.getElementById('biz-q');
                        const elCity = document.getElementById('biz-city');
                        const elSort = document.getElementById('biz-sort');
                        const elChips = document.getElementById('biz-sector-chips');
                        const elCards = document.getElementById('biz-cards');
                        const elCount = document.getElementById('biz-count');

                        if (!elQ || !elCity || !elSort || !elChips || !elCards || !elCount) {
                            console.error("Business directory elements not found");
                            return;
                        }

                        const sectors = [...new Set(businesses.map(b => b.sector))].sort();
                        const activeSectors = new Set(); // empty = all

                        // Build sector chips
                        elChips.innerHTML = ''; // Clear first
                        sectors.forEach(sec => {
                            const chip = document.createElement('button');
                            chip.type = 'button';
                            chip.className = 'chip';
                            chip.textContent = sec;
                            chip.onclick = () => {
                                chip.classList.toggle('active');
                                if (chip.classList.contains('active')) activeSectors.add(sec);
                                else activeSectors.delete(sec);
                                render();
                            };
                            elChips.appendChild(chip);
                        });

                        // Helpers
                        function normalize(s) { return (s || '').toString().toLowerCase(); }

                        function render() {
                            let list = businesses.slice();

                            // Filters
                            const q = normalize(elQ.value);
                            const city = elCity.value;
                            if (activeSectors.size) {
                                list = list.filter(b => activeSectors.has(b.sector));
                            }
                            if (city) {
                                list = list.filter(b => (b.city || '').toLowerCase().includes(city.toLowerCase()));
                            }
                            if (q) {
                                list = list.filter(b => {
                                    const blob = [b.name, b.website, b.notes, b.sector, b.city].map(normalize).join(' ');
                                    return blob.includes(q);
                                });
                            }

                            // Sort
                            const sortBy = elSort.value;
                            list.sort((a, b) => {
                                if (sortBy === 'name') return a.name.localeCompare(b.name);
                                if (sortBy === 'sector') {
                                    const s = a.sector.localeCompare(b.sector);
                                    return s !== 0 ? s : a.name.localeCompare(b.name);
                                }
                                if (sortBy === 'city') {
                                    const c = (a.city || '').localeCompare(b.city || '');
                                    return c !== 0 ? c : a.name.localeCompare(b.name);
                                }
                                return 0;
                            });

                            // Update count
                            elCount.textContent = `${list.length} business${list.length !== 1 ? 'es' : ''}`;

                            // Render cards
                            elCards.innerHTML = '';
                            list.forEach(b => {
                                const card = document.createElement('article');
                                card.className = 'card';
                                
                                let contactInfo = '';
                                if (b.website) contactInfo += `<a href="${b.website}" target="_blank" rel="noopener" class="btn">🌐 Website</a>`;
                                if (b.email) contactInfo += `<a href="mailto:${b.email}" class="btn">📧 Email</a>`;
                                if (b.phone) contactInfo += `<a href="tel:${b.phone}" class="btn">📞 Phone</a>`;

                                card.innerHTML = `
                                    <div class="name">${b.name}</div>
                                    <div class="meta">
                                        <span class="tag">${b.sector}</span>
                                        ${b.city ? `<span class="tag">${b.city}</span>` : ''}
                                    </div>
                                    ${b.notes ? `<div class="desc">${b.notes}</div>` : ''}
                                    <div class="actions">
                                        ${contactInfo}
                                    </div>
                                `;
                                elCards.appendChild(card);
                            });
                        }

                        // Event listeners
                        elQ.addEventListener('input', render);
                        elCity.addEventListener('change', render);
                        elSort.addEventListener('change', render);

                        // Form handling
                        const form = document.getElementById('biz-add-form');
                        if (form) {
                            form.addEventListener('submit', (e) => {
                                e.preventDefault();
                                const data = {
                                    name: document.getElementById('biz_f_name').value,
                                    sector: document.getElementById('biz_f_sector').value,
                                    city: document.getElementById('biz_f_city').value,
                                    website: document.getElementById('biz_f_website').value,
                                    phone: document.getElementById('biz_f_phone').value,
                                    email: document.getElementById('biz_f_email').value,
                                    desc: document.getElementById('biz_f_desc').value
                                };

                                const subject = encodeURIComponent('Libya Business Directory - Add Request');
                                const body = encodeURIComponent(`
Please add this business to the Libya Business Directory:

Business Name: ${data.name}
Sector: ${data.sector}
City: ${data.city}
Website: ${data.website}
Phone: ${data.phone}
Email: ${data.email}
Description: ${data.desc}

Thank you!
                                `);

                                window.open(`mailto:info@victoryhourmedia.com?subject=${subject}&body=${body}`);
                            });
                        }

                        // Initial render
                        render();
                        console.log("Business Directory initialized successfully!");
                    }

                    // Store function globally
                    window.initBusinessDirectory = initBusinessDirectory;
                </script>
            </div>
        </div>
    </div>

    <!-- Prayer Times Modal -->
    <div id="prayerModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
        <div class="bg-white dark:bg-gray-800 rounded-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden relative">
            <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white">🕌 Prayer Times</h2>
                <button onclick="closePrayerModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <div class="overflow-y-auto max-h-[calc(90vh-80px)]">
                <!-- Prayer Times Widget -->
                <section id="prayer-times" class="ptw">
                  <style>
                    .ptw{--bg:transparent;--card:#f8fafc;--text:#1e293b;--muted:#64748b;--accent:#2563eb;--ring:#2563eb33;font-family:system-ui,Segoe UI,Inter,Arial,sans-serif;background:var(--bg);color:var(--text);padding:24px;border-radius:18px}
                    .dark .ptw{--card:#1e293b;--text:#e2e8f0;--muted:#94a3b8;--accent:#3b82f6;--ring:#3b82f633}
                    .ptw .top{display:flex;gap:10px;flex-wrap:wrap;align-items:center;justify-content:space-between}
                    .ptw .title{font-weight:700;font-size:1.1rem}
                    .ptw .controls{display:flex;gap:8px;flex-wrap:wrap}
                    .ptw .in,.ptw .sel,.ptw .btn{background:var(--card);border:1px solid #e2e8f0;border-radius:12px;color:var(--text);padding:10px 12px;outline:none}
                    .dark .ptw .in,.dark .ptw .sel,.dark .ptw .btn{border-color:#374151}
                    .ptw .in:focus,.ptw .sel:focus{border-color:var(--accent);box-shadow:0 0 0 3px var(--ring)}
                    .ptw .btn{cursor:pointer;background:var(--accent);color:white;border-color:var(--accent)}
                    .ptw .btn:hover{opacity:0.9}
                    .ptw .chip{border:1px solid #e2e8f0;border-radius:999px;padding:4px 8px;color:var(--muted);font-size:.85rem}
                    .dark .ptw .chip{border-color:#374151}
                    .ptw .row{display:flex;gap:10px;flex-wrap:wrap;align-items:center}
                    .ptw .panel{background:var(--card);border:1px solid #e2e8f0;border-radius:16px;padding:14px}
                    .dark .ptw .panel{border-color:#374151}
                    .ptw .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(160px,1fr));gap:10px}
                    .ptw table{width:100%;border-collapse:collapse}
                    .ptw td{border-bottom:1px solid #e2e8f0;padding:6px 4px}
                    .dark .ptw td{border-color:#374151}
                    .ptw .tabs{display:flex;gap:8px;flex-wrap:wrap;margin-top:12px}
                    .ptw .tab{border:1px solid #e2e8f0;border-radius:999px;padding:6px 10px;cursor:pointer;transition:all 0.2s ease}
                    .dark .ptw .tab{border-color:#374151}
                    .ptw .tab[aria-selected="true"]{border-color:var(--accent);box-shadow:0 0 0 3px var(--ring);background:var(--accent);color:white}
                    .ptw .tab:hover{border-color:var(--accent)}
                    .ptw .calendar{display:grid;grid-template-columns:repeat(7,1fr);gap:8px;margin-top:10px}
                    .ptw .day{background:var(--card);border:1px solid #e2e8f0;border-radius:12px;padding:8px;font-size:.9rem}
                    .dark .ptw .day{border-color:#374151}
                    .ptw .day .d{font-weight:700}
                    .ptw .note{margin-top:10px;color:var(--muted);font-size:.85rem}
                    @media (max-width:620px){.ptw .controls{width:100%}.ptw .in,.ptw .sel{flex:1}}
                  </style>

                  <div class="top">
                    <div class="title" id="ptw-title">Prayer Times</div>
                    <div class="controls">
                      <input id="prayer-city" class="in" placeholder="City (e.g., Tripoli)" value="Tripoli">
                      <input id="prayer-country" class="in" placeholder="Country (e.g., Libya)" value="Libya">
                      <select id="prayer-method" class="sel" title="Method">
                        <option value="2">ISNA (2)</option>
                        <option value="3">MWL (3)</option>
                        <option value="4">Umm Al-Qura (4)</option>
                        <option value="5">Egyptian (5)</option>
                        <option value="12" selected>Umm Al-Qura (13°) (12)</option>
                        <option value="14">Gulf (14)</option>
                        <option value="15">Egypt (15)</option>
                        <option value="1">Jafari (1)</option>
                      </select>
                      <select id="prayer-school" class="sel" title="Madhhab">
                        <option value="0" selected>Shafi</option>
                        <option value="1">Hanafi</option>
                      </select>
                      <select id="prayer-lang" class="sel" title="Language">
                        <option value="en" selected>English UI</option>
                        <option value="ar">واجهة عربية</option>
                      </select>
                      <select id="prayer-clock" class="sel" title="Clock">
                        <option value="24" selected>24h</option>
                        <option value="12">12h</option>
                      </select>
                      <button id="prayer-useLoc" class="btn">📍 Use my location</button>
                      <button id="prayer-save" class="btn">💾 Save</button>
                      <button id="prayer-load" class="btn">↺ Load</button>
                      <button id="prayer-go" class="btn">Get Times</button>
                    </div>
                  </div>

                  <div class="tabs" role="tablist">
                    <button id="prayer-tab-today" class="tab" role="tab" aria-selected="true">Today</button>
                    <button id="prayer-tab-month" class="tab" role="tab">Monthly</button>
                  </div>

                  <!-- TODAY PANEL -->
                  <div id="prayer-today" class="panel" style="margin-top:10px">
                    <div class="row" style="justify-content:space-between">
                      <div class="chip" id="prayer-dateInfo">—</div>
                      <div class="chip" id="prayer-tzInfo">—</div>
                    </div>
                    <div class="grid" style="margin-top:10px">
                      <div class="panel">
                        <div class="chip" id="prayer-nextLabel">Next prayer</div>
                        <div style="font-size:1.6rem;font-weight:800;margin-top:6px" id="prayer-nextName">—</div>
                        <div style="font-size:1.2rem;margin-top:4px" id="prayer-nextTime">—</div>
                        <div class="chip" style="margin-top:6px" id="prayer-countdown">—</div>
                      </div>
                      <div class="panel">
                        <table id="prayer-times"></table>
                      </div>
                    </div>
                  </div>

                  <!-- MONTHLY PANEL -->
                  <div id="prayer-month" class="panel" style="margin-top:10px" hidden>
                    <div class="row">
                      <select id="prayer-mth" class="sel"></select>
                      <select id="prayer-yr" class="sel"></select>
                      <button id="prayer-loadMonth" class="btn">Load Month</button>
                    </div>
                    <div class="calendar" id="prayer-cal"></div>
                    <div class="note">Calendar shows Fajr • Dhuhr • Maghrib for each day (local method/settings applied).</div>
                  </div>

                  <div class="note">Powered by the free Aladhan API. Times depend on method and local settings. Adjust as needed for your community.</div>

                  <script>
                    // Initialize Prayer Times widget functionality
                    function initPrayerWidget() {
                        console.log("Initializing Prayer Times widget...");
                        
                        // ========== i18n ==========
                        const PRAYER_I18N = {
                          en:{ title:"Prayer Times", next:"Next prayer", fajr:"Fajr", sunrise:"Sunrise", dhuhr:"Dhuhr", asr:"Asr", maghrib:"Maghrib", isha:"Isha",
                               todayTab:"Today", monthTab:"Monthly", loading:"Loading…", none:"—", saved:"Saved!", loaded:"Loaded!", needCity:"Enter city & country, or use location." },
                          ar:{ title:"أوقات الصلاة", next:"الصلاة القادمة", fajr:"الفجر", sunrise:"الشروق", dhuhr:"الظهر", asr:"العصر", maghrib:"المغرب", isha:"العشاء",
                               todayTab:"اليوم", monthTab:"التقويم الشهري", loading:"جاري التحميل…", none:"—", saved:"تم الحفظ!", loaded:"تم الاسترجاع!", needCity:"أدخل المدينة والدولة أو استخدم تحديد الموقع." }
                        };

                        // Get elements with proper error checking
                        function getElement(id) {
                            const el = document.querySelector(id);
                            if (!el) console.warn(`Element ${id} not found`);
                            return el;
                        }

                        const city = getElement("#prayer-city");
                        const country = getElement("#prayer-country"); 
                        const method = getElement("#prayer-method"); 
                        const school = getElement("#prayer-school"); 
                        const lang = getElement("#prayer-lang"); 
                        const clock = getElement("#prayer-clock");
                        
                        const titleEl = getElement("#ptw-title");
                        const dateInfo = getElement("#prayer-dateInfo"); 
                        const tzInfo = getElement("#prayer-tzInfo"); 
                        const timesTbl = getElement("#prayer-times");
                        
                        const nextLabel = getElement("#prayer-nextLabel"); 
                        const nextName = getElement("#prayer-nextName"); 
                        const nextTime = getElement("#prayer-nextTime"); 
                        const countdown = getElement("#prayer-countdown");
                        
                        const tabToday = getElement("#prayer-tab-today"); 
                        const tabMonth = getElement("#prayer-tab-month"); 
                        const todayView = getElement("#prayer-today"); 
                        const monthView = getElement("#prayer-month");
                        
                        const useLocBtn = getElement("#prayer-useLoc"); 
                        const saveBtn = getElement("#prayer-save"); 
                        const loadBtn = getElement("#prayer-load"); 
                        const goBtn = getElement("#prayer-go");
                        
                        const mthSel = getElement("#prayer-mth"); 
                        const yrSel = getElement("#prayer-yr"); 
                        const loadMonthBtn = getElement("#prayer-loadMonth"); 
                        const cal = getElement("#prayer-cal");

                        // Check if required elements exist
                        if (!city || !country || !titleEl || !dateInfo || !timesTbl) {
                            console.error("Required prayer elements not found");
                            return;
                        }

                        console.log("Prayer elements found, continuing initialization...");

                        function t(k){ 
                            const langValue = lang ? lang.value : 'en';
                            return (PRAYER_I18N[langValue] || PRAYER_I18N.en)[k]; 
                        }
                        
                        function setUI(){
                          if (titleEl) titleEl.textContent = t("title");
                          if (tabToday) tabToday.textContent = t("todayTab");
                          if (tabMonth) tabMonth.textContent = t("monthTab");
                          if (nextLabel) nextLabel.textContent = t("next");
                          renderTimes({}, true);
                        }
                        
                        if (lang) lang.addEventListener("change", setUI);

                        // Populate month/year selectors
                        const now = new Date();
                        if (mthSel) {
                            mthSel.innerHTML = ''; // Clear first
                            for(let m=0;m<12;m++){
                              const d = new Date(2025, m, 1);
                              mthSel.appendChild(new Option(d.toLocaleString(undefined,{month:"long"}), String(m+1)));
                            }
                            mthSel.value = String(now.getMonth()+1);
                        }
                        if (yrSel) {
                            yrSel.innerHTML = ''; // Clear first
                            const y0 = now.getFullYear()-1, y1 = now.getFullYear()+2;
                            for(let y=y0;y<=y1;y++) yrSel.appendChild(new Option(String(y), String(y)));
                            yrSel.value = String(now.getFullYear());
                        }

                        // ========== Helpers ==========
                        const fmt12 = s=>{
                          const [H,M] = s.split(":").map(Number);
                          const h = ((H+11)%12)+1;
                          const ampm = H<12?"AM":"PM";
                          return h+":"+(M<10?"0":"")+M+" "+ampm;
                        };
                        function fmtTime(s){ return (clock && clock.value==="12") ? fmt12(s) : s; }

                        // Build table
                        function renderTimes(timings, empty){
                          if (!timesTbl) return;
                          if(empty){ 
                            timesTbl.innerHTML = `
                              <tr><td>${t("fajr")}</td><td style="text-align:right">—</td></tr>
                              <tr><td>${t("sunrise")}</td><td style="text-align:right">—</td></tr>
                              <tr><td>${t("dhuhr")}</td><td style="text-align:right">—</td></tr>
                              <tr><td>${t("asr")}</td><td style="text-align:right">—</td></tr>
                              <tr><td>${t("maghrib")}</td><td style="text-align:right">—</td></tr>
                              <tr><td>${t("isha")}</td><td style="text-align:right">—</td></tr>`; 
                            return; 
                          }
                          timesTbl.innerHTML = `
                            <tr><td>${t("fajr")}</td><td style="text-align:right">${fmtTime(timings.Fajr)}</td></tr>
                            <tr><td>${t("sunrise")}</td><td style="text-align:right">${fmtTime(timings.Sunrise)}</td></tr>
                            <tr><td>${t("dhuhr")}</td><td style="text-align:right">${fmtTime(timings.Dhuhr)}</td></tr>
                            <tr><td>${t("asr")}</td><td style="text-align:right">${fmtTime(timings.Asr)}</td></tr>
                            <tr><td>${t("maghrib")}</td><td style="text-align:right">${fmtTime(timings.Maghrib)}</td></tr>
                            <tr><td>${t("isha")}</td><td style="text-align:right">${fmtTime(timings.Isha)}</td></tr>`;
                        }

                        // Fetch daily by city or coords
                        async function fetchDaily(opts){
                          if (!method || !school) throw new Error("Method/school not selected");
                          const methodV = method.value, schoolV = school.value;
                          
                          const baseUrl = opts.lat && opts.lon ? 
                            "https://api.aladhan.com/v1/timings" : 
                            "https://api.aladhan.com/v1/timingsByCity";
                          
                          const u = new URL(baseUrl);
                          if (opts.lat && opts.lon) {
                            u.searchParams.set("latitude", opts.lat);
                            u.searchParams.set("longitude", opts.lon);
                          } else {
                            u.searchParams.set("city", opts.city);
                            u.searchParams.set("country", opts.country);
                          }
                          u.searchParams.set("method", methodV);
                          u.searchParams.set("school", schoolV);
                          
                          const r = await fetch(u);
                          if (!r.ok) throw new Error(`API Error: ${r.status}`);
                          const j = await r.json();
                          return j.data;
                        }

                        // ========== Actions ==========
                        let lastQuery = {city:"Tripoli", country:"Libya"};
                        
                        async function doDaily(opts){
                          console.log("Fetching prayer times for:", opts);
                          if (dateInfo) dateInfo.textContent = t("loading");
                          
                          try {
                            const data = await fetchDaily(opts);
                            console.log("Prayer data received:", data);
                            renderTimes(data.timings);
                            
                            // Simple next prayer calculation
                            if (dateInfo) {
                              const tz = data.meta?.timezone || "Local Time";
                              const cityStr = opts.city || "GPS Location";
                              const countryStr = opts.country || "";
                              dateInfo.textContent = `${data.date?.readable || new Date().toLocaleDateString()} • ${cityStr}${countryStr ? `, ${countryStr}` : ""}`;
                            }
                            if (tzInfo) tzInfo.textContent = data.meta?.timezone || "Local Time";
                            
                            // Simple next prayer display
                            if (nextName) nextName.textContent = t("fajr");
                            if (nextTime) nextTime.textContent = fmtTime(data.timings.Fajr);
                            if (countdown) countdown.textContent = "Loading...";
                            
                            lastQuery = opts;
                          } catch(e) {
                            console.error("Prayer times error:", e);
                            if (dateInfo) dateInfo.textContent = `Error: ${e.message}`;
                            renderTimes({}, true);
                          }
                        }

                        // Button event handlers
                        if (goBtn) {
                            goBtn.addEventListener("click", () => {
                              const c = city.value.trim(), k = country.value.trim();
                              if (!c || !k) { 
                                  if (dateInfo) dateInfo.textContent = t("needCity"); 
                                  return; 
                              }
                              doDaily({city: c, country: k});
                            });
                        }

                        if (useLocBtn) {
                            useLocBtn.addEventListener("click", () => {
                              if (!navigator.geolocation) { 
                                  alert("Geolocation not supported"); 
                                  return; 
                              }
                              navigator.geolocation.getCurrentPosition(pos => {
                                const {latitude: lat, longitude: lon} = pos.coords;
                                doDaily({lat, lon});
                              }, err => alert(err.message || "Location error"));
                            });
                        }

                        // Tab switching
                        if (tabToday) {
                            tabToday.addEventListener("click", () => {
                              tabToday.setAttribute("aria-selected", "true");
                              if (tabMonth) tabMonth.setAttribute("aria-selected", "false");
                              if (todayView) todayView.hidden = false; 
                              if (monthView) monthView.hidden = true;
                            });
                        }
                        
                        if (tabMonth) {
                            tabMonth.addEventListener("click", () => {
                              tabMonth.setAttribute("aria-selected", "true");
                              if (tabToday) tabToday.setAttribute("aria-selected", "false");
                              if (todayView) todayView.hidden = true; 
                              if (monthView) monthView.hidden = false;
                            });
                        }

                        // Initialize UI
                        console.log("Setting up UI...");
                        setUI();
                        
                        // Load default prayer times
                        console.log("Loading default prayer times...");
                        if (city && country && city.value && country.value) {
                            doDaily({city: city.value.trim(), country: country.value.trim()});
                        }
                        
                        console.log("Prayer Times widget initialized successfully!");
                    }

                    // Store function globally
                    window.initPrayerWidget = initPrayerWidget;
                  </script>
                </section>
            </div>
        </div>
    </div>

    <!-- Banks & ATMs Modal -->
    <div id="banksModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
        <div class="bg-white dark:bg-gray-800 rounded-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden relative">
            <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white">🏦 Libya Banks & ATMs</h2>
                <button onclick="closeBanksModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <div class="overflow-y-auto max-h-[calc(90vh-80px)]">
                <!-- Banks & ATMs Widget -->
                <section id="libya-banks" class="lb-widget">
                  <style>
                    .lb-widget{--bg:transparent;--card:#f8fafc;--text:#1e293b;--muted:#64748b;--accent:#2563eb;--ring:#2563eb33;font-family:system-ui,Segoe UI,Inter,Arial,sans-serif;background:var(--bg);color:var(--text);padding:28px;border-radius:18px}
                    .dark .lb-widget{--card:#1e293b;--text:#e2e8f0;--muted:#94a3b8;--accent:#3b82f6;--ring:#3b82f633}
                    .lb-top{display:flex;gap:12px;flex-wrap:wrap;align-items:center;justify-content:space-between;margin-bottom:14px}
                    .lb-title{font-weight:700;font-size:1.15rem}
                    .controls{display:flex;gap:8px;flex-wrap:wrap}
                    .in,.sel,.btn{background:var(--card);border:1px solid #e2e8f0;border-radius:12px;color:var(--text);padding:10px 12px;outline:none}
                    .dark .in,.dark .sel,.dark .btn{border-color:#374151}
                    .in:focus,.sel:focus{border-color:var(--accent);box-shadow:0 0 0 3px var(--ring)}
                    .btn{cursor:pointer;background:var(--accent);color:white;border-color:var(--accent)}
                    .btn:hover{opacity:0.9}
                    .tabs{display:flex;gap:8px;flex-wrap:wrap;margin-bottom:10px}
                    .tab{border:1px solid #e2e8f0;border-radius:999px;padding:6px 10px;font-size:.92rem;cursor:pointer;transition:all 0.2s ease}
                    .dark .tab{border-color:#374151}
                    .tab[aria-selected="true"]{border-color:var(--accent);box-shadow:0 0 0 3px var(--ring);background:var(--accent);color:white}
                    .tab:hover{border-color:var(--accent)}
                    .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:12px}
                    .card{background:var(--card);border:1px solid #e2e8f0;border-radius:14px;padding:14px;display:flex;flex-direction:column;gap:6px;transition:transform .1s ease,border-color .2s ease}
                    .dark .card{border-color:#374151}
                    .card:hover{border-color:var(--accent);transform:translateY(-1px)}
                    .name{font-weight:600}
                    .muted{color:var(--muted);font-size:.9rem}
                    .tag{border:1px solid #e2e8f0;border-radius:999px;padding:2px 8px;color:var(--muted);font-size:.72rem}
                    .dark .tag{border-color:#374151}
                    .row{display:flex;gap:8px;flex-wrap:wrap;align-items:center}
                    .links a{color:var(--accent);text-decoration:none;word-break:break-all}
                    .links a:hover{text-decoration:underline}
                    .empty{opacity:.85;padding:18px;text-align:center;border:1px dashed #cbd5e1;border-radius:12px}
                    .dark .empty{border-color:#4b5563}
                    .note{margin-top:12px;color:var(--muted);font-size:.85rem}
                    @media (max-width:560px){.controls{width:100%}.in,.sel{flex:1}}
                  </style>

                  <div class="lb-top">
                    <div class="lb-title">Libya • Banks & ATMs</div>
                    <div class="controls">
                      <input id="bank-q" class="in" type="search" placeholder="Search banks… (e.g., Benghazi, Islamic, Aman)">
                      <select id="bank-filter" class="sel" title="Filter">
                        <option value="all">All banks</option>
                        <option value="islamic">Islamic banks</option>
                        <option value="hasATM">Has ATM/Branch locator</option>
                      </select>
                    </div>
                  </div>

                  <div class="tabs" role="tablist">
                    <button id="tab-banks" class="tab" role="tab" aria-selected="true">Banks</button>
                    <button id="tab-atm" class="tab" role="tab">ATM Finder</button>
                  </div>

                  <!-- BANKS LIST -->
                  <div id="banks-view">
                    <div id="bank-cards" class="grid" role="list"></div>
                    <div class="note">Sources: Central Bank of Libya's official list of commercial banks; bank ATM/branch pages where available.</div>
                  </div>

                  <!-- ATM FINDER -->
                  <div id="atm-view" hidden>
                    <div class="row" style="margin-bottom:10px">
                      <input id="city" class="in" placeholder="Enter city (e.g., Tripoli, Benghazi, Misrata)">
                      <button id="goATM" class="btn">Find ATMs</button>
                    </div>
                    <div class="grid">
                      <article class="card">
                        <div class="name">Visa Global ATM Locator</div>
                        <div class="muted">Worldwide network, includes Libya</div>
                        <div class="links"><a target="_blank" rel="noopener" href="https://www.visa.com/locator/atm">Open</a></div>
                      </article>
                      <article class="card">
                        <div class="name">Mastercard ATM Locator</div>
                        <div class="muted">Worldwide network, includes Libya</div>
                        <div class="links"><a target="_blank" rel="noopener" href="https://www.mastercard.com/us/en/personal/get-support/atm-near-me.html">Open</a></div>
                      </article>
                      <article class="card">
                        <div class="name">Quick city search (Google Maps)</div>
                        <div class="muted">Opens a map for "ATM in [your city], Libya"</div>
                        <div class="links"><a id="gmap" target="_blank" rel="noopener">Open</a></div>
                      </article>
                    </div>
                    <div class="note">Tip: For specific banks, use their ATM/branch locator links in the Banks tab.</div>
                  </div>

                  <script>
                    // ---------- Data (from CBL official list; ATM links: official pages) ----------
                    if (!window.LIBYA_BANKS) {
                        window.LIBYA_BANKS = [
                          {name:"Jumhouria Bank", url:"https://www.jbank.ly/", atm:"https://www.jbank.ly/en/atm-branch-locator/"},
                          {name:"National Commercial Bank (NCB)", url:"https://www.ncb.ly/", atm:"https://www.ncb.ly/en/contact-us/atm-branch-locator/"},
                          {name:"Wahda Bank", url:"https://www.wahdabank.com.ly/", atm:"https://www.wahdabank.com.ly/atm"},
                          {name:"Sahara Bank", url:"https://www.saharabank.ly/"},
                          {name:"Bank of Commerce & Development (BCD)", url:"https://www.bcd.ly/en"},
                          {name:"North Africa Bank (NAB)", url:"https://nab.ly/"},
                          {name:"Aman Bank", url:"https://www.aman-bank.com/en", atm:"https://www.aman-bank.com/en/atm-branch-locator/atm"},
                          {name:"Alejma'a Alarabi Bank", url:"https://ejmaa.aabank.ly/"},
                          {name:"Libyan Foreign Bank (LFB)", url:"https://www.lfb.ly/"},
                          {name:"First Gulf Libyan Bank", url:"https://www.bankfab.com/ar-ly/"},
                          {name:"Alwaha (Oasis) Bank", url:"https://alwahabank.ly/en/", atm:"https://alwahabank.ly/en/"},
                          {name:"United Bank for Commerce & Investment (UBCI)", url:"https://www.ubci-libya.com/En/", atm:"https://www.ubci-libya.com/EN/customerService/BranchLocator/"},
                          {name:"Assaray Trade & Investment Bank (ATIB)", url:"https://atib.ly/en/", atm:"https://atib.ly/en/map/"},
                          {name:"Mediterranean Bank", url:"https://meditbank.ly/"},
                          {name:"Nuran Bank", url:"https://nub.ly/en/"},
                          {name:"Alwafa Bank", url:"https://alwafabank.com/"},
                          {name:"Tadhamon (Tadhamun) Bank", url:"https://tab.ly/"},
                          {name:"Libyan Islamic Bank", url:"https://www.lib.com.ly/", islamic:true},
                          {name:"Yaqeen Bank", url:"https://yaqeenbank.ly/", islamic:true},
                          {name:"Andalus Bank", url:"https://www.andalusbank.com/", islamic:true}
                        ];
                    }

                    // Initialize Banks widget functionality
                    function initBanksWidget() {
                        const qs = s => document.querySelector(s);
                        const q = qs("#bank-q"), filterSel = qs("#bank-filter");
                        const cards = qs("#bank-cards");
                        const tabBanks = qs("#tab-banks"), tabATM = qs("#tab-atm");
                        const banksView = qs("#banks-view"), atmView = qs("#atm-view");
                        const cityIn = qs("#city"), goATM = qs("#goATM"), gmap = qs("#gmap");

                        if (!cards || !q || !filterSel || !tabBanks || !tabATM || !banksView || !atmView) return;

                        function render(list){
                          cards.innerHTML = "";
                          if(!list.length){ cards.innerHTML = `<div class="empty">No matches. Try another search.</div>`; return; }
                          for(const b of list){
                            const el = document.createElement("article");
                            el.className = "card";
                            el.setAttribute("role","listitem");
                            el.innerHTML = `
                              <div class="row" style="justify-content:space-between;">
                                <div class="name">${b.name}</div>
                                <div class="row">${b.islamic?'<span class="tag">Islamic</span>':''}${b.atm?'<span class="tag">ATM locator</span>':''}</div>
                              </div>
                              <div class="links">
                                <a href="${b.url}" target="_blank" rel="noopener">Website</a>
                                ${b.atm?` • <a href="${b.atm}" target="_blank" rel="noopener">ATM/Branches</a>`:""}
                              </div>
                            `;
                            cards.appendChild(el);
                          }
                        }

                        function apply(){
                          const text = q.value.trim().toLowerCase();
                          const filt = filterSel.value;
                          const out = window.LIBYA_BANKS.filter(b=>{
                            const txt = !text || b.name.toLowerCase().includes(text);
                            const hasATM = !!b.atm;
                            const isl = !!b.islamic;
                            const inFilt = (filt==="all") || (filt==="hasATM" && hasATM) || (filt==="islamic" && isl);
                            return txt && inFilt;
                          });
                          render(out);
                        }

                        // Remove existing listeners to prevent duplicates
                        q.removeEventListener("input", apply);
                        filterSel.removeEventListener("change", apply);

                        // Add fresh listeners
                        q.addEventListener("input", apply);
                        filterSel.addEventListener("change", apply);

                        tabBanks.addEventListener("click", ()=>{
                          tabBanks.setAttribute("aria-selected","true");
                          tabATM.setAttribute("aria-selected","false");
                          banksView.hidden = false; atmView.hidden = true;
                        });
                        tabATM.addEventListener("click", ()=>{
                          tabATM.setAttribute("aria-selected","true");
                          tabBanks.setAttribute("aria-selected","false");
                          banksView.hidden = true; atmView.hidden = false;
                          if (cityIn) cityIn.focus();
                        });

                        if (goATM && cityIn && gmap) {
                            goATM.addEventListener("click", ()=>{
                              const c = (cityIn.value||"").trim();
                              const query = c ? encodeURIComponent(`ATM in ${c}, Libya`) : encodeURIComponent("ATM in Libya");
                              gmap.href = `https://www.google.com/maps/search/${query}`;
                              gmap.textContent = c ? `Open map for "ATM in ${c}, Libya"` : "Open Libya ATM map";
                              gmap.focus();
                            });
                        }

                        // init
                        apply();
                    }

                    // Store function globally
                    window.initBanksWidget = initBanksWidget;
                  </script>
                </section>
            </div>
        </div>
    </div>

    <!-- Job Hub Modal -->
    <div id="jobModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
        <div class="bg-white dark:bg-gray-800 rounded-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden relative">
            <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white">💼 Libya Job Hub</h2>
                <button onclick="closeJobModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <div class="overflow-y-auto max-h-[calc(90vh-80px)]">
                <!-- Job Hub Widget -->
                <section id="job-hub" class="job-hub">
                  <style>
                    .job-hub{--bg:transparent;--card:#f8fafc;--text:#1e293b;--muted:#64748b;--accent:#2563eb;--ring:#2563eb33;font-family:system-ui,Segoe UI,Inter,Arial,sans-serif;background:var(--bg);color:var(--text);padding:28px;border-radius:18px}
                    .dark .job-hub{--card:#1e293b;--text:#e2e8f0;--muted:#94a3b8;--accent:#3b82f6;--ring:#3b82f633}
                    .jh-top{display:flex;gap:12px;flex-wrap:wrap;align-items:center;justify-content:space-between;margin-bottom:16px}
                    .jh-title{font-weight:700;font-size:1.15rem}
                    .jh-controls{display:flex;flex-wrap:wrap;gap:8px}
                    .jh-input,.jh-select,.jh-btn{background:var(--card);border:1px solid #e2e8f0;border-radius:12px;color:var(--text);padding:10px 12px;outline:none}
                    .dark .jh-input,.dark .jh-select,.dark .jh-btn{border-color:#374151}
                    .jh-input:focus,.jh-select:focus{border-color:var(--accent);box-shadow:0 0 0 3px var(--ring)}
                    .jh-tabs{display:flex;gap:8px;flex-wrap:wrap;margin-bottom:10px}
                    .tab{border:1px solid #e2e8f0;border-radius:999px;padding:6px 10px;font-size:.92rem;cursor:pointer;transition:all 0.2s ease}
                    .dark .tab{border-color:#374151}
                    .tab[aria-selected="true"]{border-color:var(--accent);box-shadow:0 0 0 3px var(--ring);background:var(--accent);color:white}
                    .tab:hover{border-color:var(--accent)}
                    .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(240px,1fr));gap:12px}
                    .card{background:var(--card);border:1px solid #e2e8f0;border-radius:14px;padding:14px;display:flex;flex-direction:column;gap:6px;transition:transform .1s ease,border-color .2s ease}
                    .dark .card{border-color:#374151}
                    .card:hover{transform:translateY(-2px);border-color:var(--accent)}
                    .name{font-weight:600;line-height:1.2}
                    .cat{font-size:.8rem;color:var(--muted)}
                    .link a{color:var(--accent);text-decoration:none;word-break:break-all}
                    .tags{display:flex;gap:6px;flex-wrap:wrap;margin-top:4px}
                    .tag{font-size:.72rem;border:1px solid #e2e8f0;border-radius:999px;padding:3px 8px;color:var(--muted)}
                    .dark .tag{border-color:#374151}
                    .empty{opacity:.85;padding:18px;text-align:center;border:1px dashed #cbd5e1;border-radius:12px}
                    .dark .empty{border-color:#4b5563}
                    .list{display:flex;flex-direction:column;gap:10px}
                    .job{background:var(--card);border:1px solid #e2e8f0;border-radius:12px;padding:12px}
                    .dark .job{border-color:#374151}
                    .job .title{font-weight:600}
                    .job .meta{font-size:.86rem;color:var(--muted)}
                    .row{display:flex;gap:8px;flex-wrap:wrap;align-items:center}
                    .btn{cursor:pointer;background:var(--accent);color:white;border-color:var(--accent)}
                    .btn:hover{opacity:0.9}
                    @media (max-width:560px){.jh-controls{width:100%}.jh-input,.jh-select{flex:1}}
                  </style>

                  <div class="jh-top">
                    <div class="jh-title" id="jh-title">Job Hub • Libya-first</div>
                    <div class="jh-controls">
                      <input id="q" class="jh-input" type="search" placeholder="Search links (e.g., Tripoli, NGO, engineer)…">
                      <select id="filter" class="jh-select" title="Filter">
                        <option value="all">All sources</option>
                        <option>Libya Sites</option>
                        <option>MENA Boards</option>
                        <option>International Orgs</option>
                        <option>Remote/Global</option>
                      </select>
                      <select id="ui" class="jh-select">
                        <option value="en">English UI</option>
                        <option value="ar">واجهة عربية</option>
                      </select>
                    </div>
                  </div>

                  <div class="jh-tabs" role="tablist" aria-label="Job Hub Tabs">
                    <button class="tab" role="tab" id="tab-links" aria-selected="true">Links</button>
                    <button class="tab" role="tab" id="tab-live">Live jobs</button>
                  </div>

                  <!-- LINKS VIEW -->
                  <div id="links-view">
                    <div id="cards" class="grid" role="list"></div>
                  </div>

                  <!-- LIVE VIEW -->
                  <div id="live-view" hidden>
                    <div class="row" style="margin-bottom:10px">
                      <input id="live-keywords" class="jh-input" placeholder="Keyword (e.g., engineer, teacher, NGO)">
                      <input id="live-location" class="jh-input" placeholder="Location (e.g., Libya, Tripoli)" value="Libya">
                      <select id="live-source" class="jh-select">
                        <option value="remotive">Remotive (no key)</option>
                        <option value="jooble">Jooble (add API key)</option>
                      </select>
                      <input id="jooble-key" class="jh-input" placeholder="Jooble API Key (optional)">
                      <button id="live-go" class="jh-btn btn">Search</button>
                    </div>
                    <div id="live-results" class="list"></div>
                    <div class="tag" style="margin-top:6px">Tip: For Jooble, some browsers require a small server proxy due to CORS.</div>
                  </div>

                  <script>
                    /* ==================== DATA: Curated sources ==================== */
                    if (!window.JOB_SOURCES) {
                        window.JOB_SOURCES = [
                          // Libya-focused
                          {name:"LibyanJobs.ly — موقع التوظيف الليبي", url:"https://libyanjobs.ly/", cat:"Libya Sites", langs:["ar","en"]},
                          {name:"LibyaCV — وظائف ليبيا", url:"https://www.libyacv.com/", cat:"Libya Sites", langs:["ar"]},
                          {name:"LinkedIn Jobs — Libya", url:"https://www.linkedin.com/jobs/jobs-in-libya", cat:"Libya Sites", langs:["en"]},

                          // MENA boards
                          {name:"Bayt — Libya Jobs", url:"https://www.bayt.com/en/libya/jobs/", cat:"MENA Boards", langs:["ar","en"]},
                          {name:"Tanqeeb — Libya", url:"https://libya.tanqeeb.com/en", cat:"MENA Boards", langs:["ar","en"]},
                          {name:"Wzayef — Libya", url:"https://www.wzayef.com/en/jobs/libya", cat:"MENA Boards", langs:["ar","en"]},
                          {name:"NaukriGulf — Libya", url:"https://www.naukrigulf.com/jobs-in-libya", cat:"MENA Boards", langs:["en"]},

                          // International orgs in/around Libya
                          {name:"UN Libya — Jobs", url:"https://libya.un.org/en/jobs", cat:"International Orgs", langs:["en","ar"]},
                          {name:"UNjobs — Libya/Tripoli", url:"https://unjobs.org/duty_stations/tip", cat:"International Orgs", langs:["en"]},
                          {name:"ReliefWeb — Libya jobs", url:"https://reliefweb.int/jobs?advanced-search=%28C140%29&list=Libya+Jobs", cat:"International Orgs", langs:["en"]},
                          {name:"Impactpool — Libya", url:"https://www.impactpool.org/countries/Libya", cat:"International Orgs", langs:["en"]},
                          {name:"US Embassy Libya — ERA", url:"https://ly.usembassy.gov/jobs/", cat:"International Orgs", langs:["en"]},

                          // Remote/global
                          {name:"Remotive — Remote jobs", url:"https://remotive.com/remote-jobs", cat:"Remote/Global", langs:["en"]},
                          {name:"Adzuna API (developer)", url:"https://developer.adzuna.com/", cat:"Remote/Global", langs:["en"]},
                          {name:"Jooble API (developer)", url:"https://jooble.org/api/about", cat:"Remote/Global", langs:["en"]}
                        ];
                    }

                    /* ==================== UI strings EN/AR ==================== */
                    const JOB_STR = {
                      en:{ title:"Job Hub • Libya-first", search:"Search links…", nomatch:"No matches. Try another keyword or choose a different tab.", links:"Links", live:"Live jobs", liveTip:"Tip: For Jooble, some browsers require a small server proxy due to CORS." },
                      ar:{ title:"بوابة الوظائف • ليبيا أولاً", search:"ابحث في الروابط…", nomatch:"لا توجد نتائج. جرّب كلمة أخرى أو بدّل علامة التبويب.", links:"روابط", live:"وظائف مباشرة", liveTip:"ملاحظة: خدمة Jooble قد تتطلب وسيط خادم بسبب CORS." }
                    };

                    // Initialize Job Hub functionality
                    function initJobHub() {
                        const qs = sel => document.querySelector(sel);
                        const cards = qs("#cards");
                        const q = qs("#q"), filterSel = qs("#filter"), ui = qs("#ui");
                        const tabLinks = qs("#tab-links"), tabLive = qs("#tab-live");
                        const linksView = qs("#links-view"), liveView = qs("#live-view");
                        const title = qs("#jh-title");

                        if (!cards || !q || !filterSel || !ui || !tabLinks || !tabLive || !linksView || !liveView || !title) return;

                        function t(k){ return JOB_STR[ui.value][k]; }
                        function tagLabel(code){ return code==="ar" ? (ui.value==="ar"?"عربي":"Arabic") : (ui.value==="ar"?"إنجليزي":"English"); }

                        function render(list){
                          cards.innerHTML = "";
                          if(!list.length){ cards.innerHTML = `<div class="empty">${t("nomatch")}</div>`; return; }
                          for(const s of list){
                            const el = document.createElement("article");
                            el.className = "card";
                            el.setAttribute("role","listitem");
                            el.innerHTML = `
                              <div class="name">${s.name}</div>
                              <div class="cat">${s.cat}</div>
                              <div class="link"><a href="${s.url}" target="_blank" rel="noopener">${s.url}</a></div>
                              <div class="tags">${(s.langs||[]).map(l=>`<span class="tag">${tagLabel(l)}</span>`).join("")}</div>
                            `;
                            cards.appendChild(el);
                          }
                        }

                        function apply(){
                          const text = q.value.trim().toLowerCase();
                          const cat = filterSel.value;
                          const out = window.JOB_SOURCES.filter(s=>{
                            const inCat = (cat==="all") || (s.cat===cat);
                            const inText = !text || s.name.toLowerCase().includes(text) || s.url.toLowerCase().includes(text);
                            return inCat && inText;
                          });
                          render(out);
                        }

                        function setLang(){
                          title.textContent = t("title");
                          q.placeholder = t("search");
                          tabLinks.textContent = t("links");
                          tabLive.textContent = t("live");
                          const liveTipEl = qs("#live-view .tag");
                          if (liveTipEl) liveTipEl.textContent = t("liveTip");
                          apply();
                        }

                        // Remove existing listeners to prevent duplicates
                        q.removeEventListener("input", apply);
                        filterSel.removeEventListener("change", apply);
                        ui.removeEventListener("change", setLang);

                        // Add fresh listeners
                        q.addEventListener("input", apply);
                        filterSel.addEventListener("change", apply);
                        ui.addEventListener("change", setLang);

                        tabLinks.addEventListener("click", ()=>{
                          tabLinks.setAttribute("aria-selected","true");
                          tabLive.setAttribute("aria-selected","false");
                          linksView.hidden = false; liveView.hidden = true;
                        });
                        tabLive.addEventListener("click", ()=>{
                          tabLive.setAttribute("aria-selected","true");
                          tabLinks.setAttribute("aria-selected","false");
                          linksView.hidden = true; liveView.hidden = false;
                        });

                        // ---- LIVE JOBS (Remotive default; Jooble optional) ----
                        const liveBtn = qs("#live-go"), liveList = qs("#live-results");
                        async function searchRemotive(keywords){
                          const url = new URL("https://remotive.com/api/remote-jobs");
                          if(keywords) url.searchParams.set("search", keywords);
                          const res = await fetch(url, {headers:{'accept':'application/json'}});
                          const data = await res.json();
                          return (data.jobs||[]).slice(0,25).map(j=>({
                            title:j.title, company:j.company_name, loc:j.candidate_required_location||"Remote",
                            url:j.url, date:j.publication_date?.slice(0,10), source:"Remotive"
                          }));
                        }
                        async function searchJooble(keywords, location, apiKey){
                          // NOTE: Jooble is POST to /api/{key} and may be blocked by CORS in browser apps.
                          // If CORS blocks, send the same request via your serverless function.
                          const res = await fetch(`https://jooble.org/api/${apiKey}`, {
                            method:"POST",
                            headers:{'Content-Type':'application/json'},
                            body: JSON.stringify({ keywords: keywords||"", location: location||"Libya", page:1, radius:"50" })
                          });
                          const data = await res.json();
                          const arr = (data.jobs||[]).slice(0,25);
                          return arr.map(j=>({
                            title:j.title, company:j.company, loc:j.location, url:j.link, date:j.updated||j.posted, source:"Jooble"
                          }));
                        }
                        function renderLive(rows){
                          liveList.innerHTML = "";
                          if(!rows.length){ liveList.innerHTML = `<div class="empty">No live results.</div>`; return; }
                          for(const r of rows){
                            const el = document.createElement("div"); el.className="job";
                            el.innerHTML = `
                              <div class="title"><a href="${r.url}" target="_blank" rel="noopener">${r.title}</a></div>
                              <div class="meta">${r.company||""} • ${r.loc||""} • ${r.date||""} • <span class="tag">${r.source}</span></div>
                            `;
                            liveList.appendChild(el);
                          }
                        }
                        if (liveBtn) {
                            liveBtn.addEventListener("click", async ()=>{
                              const kw = qs("#live-keywords").value.trim();
                              const loc = qs("#live-location").value.trim();
                              const src = qs("#live-source").value;
                              const key = qs("#jooble-key").value.trim();
                              liveList.innerHTML = `<div class="empty">Loading…</div>`;
                              try{
                                let rows = [];
                                if(src==="remotive"){
                                  const r = await searchRemotive([kw, loc!=="Libya"?loc:""].filter(Boolean).join(" "));
                                  rows = r;
                                }else{
                                  if(!key){ liveList.innerHTML = `<div class="empty">Add your Jooble API key, then search.</div>`; return; }
                                  rows = await searchJooble(kw, loc, key);
                                }
                                renderLive(rows);
                              }catch(e){
                                liveList.innerHTML = `<div class="empty">Error loading jobs. ${e?.message||""}</div>`;
                              }
                            });
                        }

                        // init UI
                        setLang();
                        apply();
                    }

                    // Store function globally
                    window.initJobHub = initJobHub;
                  </script>
                </section>
            </div>
        </div>
    </div>

    <!-- Education Hub Modal -->
    <div id="educationModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
        <div class="bg-white dark:bg-gray-800 rounded-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden relative">
            <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white">🎓 Libya Education Hub</h2>
                <button onclick="closeEducationModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <div class="overflow-y-auto max-h-[calc(90vh-80px)]">
                <!-- Education Hub Widget -->
                <section id="edu-hub" class="edu-hub">
                  <style>
                    .edu-hub{--bg:transparent;--card:#f8fafc;--text:#1e293b;--muted:#64748b;--accent:#2563eb;--ring:#2563eb33;font-family:system-ui,Segoe UI,Inter,Arial,sans-serif;background:var(--bg);color:var(--text);padding:28px;border-radius:18px}
                    .dark .edu-hub{--card:#1e293b;--text:#e2e8f0;--muted:#94a3b8;--accent:#3b82f6;--ring:#3b82f633}
                    .eh-header{display:flex;gap:12px;flex-wrap:wrap;align-items:center;justify-content:space-between;margin-bottom:18px}
                    .eh-title{font-weight:700;font-size:1.15rem}
                    .eh-controls{display:flex;flex-wrap:wrap;gap:10px}
                    .eh-input,.eh-select{background:var(--card);border:1px solid #e2e8f0;color:var(--text);padding:10px 12px;border-radius:12px;min-width:220px;outline:none}
                    .dark .eh-input,.dark .eh-select{border-color:#374151}
                    .eh-input:focus,.eh-select:focus{border-color:var(--accent);box-shadow:0 0 0 3px var(--ring)}
                    .eh-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(240px,1fr));gap:12px}
                    .eh-card{background:var(--card);border:1px solid #e2e8f0;border-radius:14px;padding:14px;display:flex;flex-direction:column;gap:8px;transition:transform .1s ease,border-color .2s ease}
                    .dark .eh-card{border-color:#374151}
                    .eh-card:hover{transform:translateY(-2px);border-color:var(--accent)}
                    .eh-name{font-weight:600;line-height:1.2}
                    .eh-cat{font-size:.8rem;color:var(--muted)}
                    .eh-link a{color:var(--accent);text-decoration:none;word-break:break-all}
                    .eh-tags{display:flex;gap:6px;flex-wrap:wrap}
                    .tag{font-size:.72rem;border:1px solid #e2e8f0;border-radius:999px;padding:3px 8px;color:var(--muted)}
                    .dark .tag{border-color:#374151}
                    .eh-empty{opacity:.8;padding:18px;text-align:center;border:1px dashed #cbd5e1;border-radius:12px}
                    .dark .eh-empty{border-color:#4b5563}
                    .eh-footer{margin-top:14px;font-size:.82rem;color:var(--muted);display:flex;gap:12px;flex-wrap:wrap;align-items:center}
                    .pill{border:1px solid #e2e8f0;border-radius:999px;padding:6px 10px}
                    .dark .pill{border-color:#374151}
                    @media (max-width:520px){.eh-controls{width:100%}.eh-input,.eh-select{flex:1}}
                  </style>

                  <div class="eh-header">
                    <div class="eh-title" id="eh-title">Education Hub • Arabic & English</div>
                    <div class="eh-controls">
                      <input id="eh-search" class="eh-input" type="search" placeholder="Search (e.g., Edraak, TOEFL, AI, Tripoli)…" />
                      <select id="eh-filter" class="eh-select">
                        <option value="all">All categories</option>
                        <option>Universities</option>
                        <option>Online Courses (Arabic)</option>
                        <option>Online Courses (English)</option>
                        <option>International Tests</option>
                        <option>Best AI Courses</option>
                      </select>
                      <select id="eh-lang" class="eh-select" title="UI language">
                        <option value="en">English UI</option>
                        <option value="ar">واجهة عربية</option>
                      </select>
                    </div>
                  </div>

                  <div id="eh-grid" class="eh-grid" role="list"></div>

                  <div class="eh-footer">
                    <span class="pill">Updated: 2025-08-15</span>
                    <span class="pill">Tip: Use the category filter to narrow fast.</span>
                  </div>

                  <script>
                    /* ========= DATA =========
                       Add/remove items freely. category must match one of the filter options. 
                       langs = ["ar","en"] means content is available in those languages.
                    */
                    if (!window.EH_ITEMS) {
                        window.EH_ITEMS = [
                          /* --- Universities (MENA examples + Libya) --- */
                          { name:"University of Tripoli (Libya)", url:"https://uot.edu.ly/index.php?lang=en", category:"Universities", langs:["ar","en"] },
                          { name:"University of Benghazi (Libya)", url:"https://uob.edu.ly/", category:"Universities", langs:["ar"] },
                          { name:"The University of Jordan", url:"https://www.ju.edu.jo/", category:"Universities", langs:["ar","en"] },
                          { name:"Jordan Univ. of Science & Technology", url:"https://www.just.edu.jo/", category:"Universities", langs:["ar","en"] },
                          { name:"American University in Cairo (AUC)", url:"https://www.aucegypt.edu/", category:"Universities", langs:["en"] },

                          /* --- Online Courses (Arabic-first) --- */
                          { name:"Edraak — Arabic MOOCs", url:"https://www.edraak.org/en/", category:"Online Courses (Arabic)", langs:["ar","en"] },
                          { name:"Rwaq — المنصة العربية للتعليم المفتوح", url:"https://www.rwaq.org/", category:"Online Courses (Arabic)", langs:["ar"] },
                          { name:"Khan Academy (Arabic)", url:"https://ar.khanacademy.org/", category:"Online Courses (Arabic)", langs:["ar"] },

                          /* --- Online Courses (English/global) --- */
                          { name:"Coursera", url:"https://www.coursera.org/", category:"Online Courses (English)", langs:["en"] },
                          { name:"edX", url:"https://www.edx.org/", category:"Online Courses (English)", langs:["en"] },
                          { name:"MIT OpenCourseWare (free)", url:"https://ocw.mit.edu/", category:"Online Courses (English)", langs:["en"] },
                          { name:"Harvard Online", url:"https://harvardonline.harvard.edu/", category:"Online Courses (English)", langs:["en"] },
                          { name:"FutureLearn", url:"https://www.futurelearn.com/", category:"Online Courses (English)", langs:["en"] },
                          { name:"freeCodeCamp (free)", url:"https://www.freecodecamp.org/", category:"Online Courses (English)", langs:["en"] },
                          { name:"Udacity", url:"https://www.udacity.com/", category:"Online Courses (English)", langs:["en"] },

                          /* --- International Tests --- */
                          { name:"TOEFL iBT (ETS)", url:"https://www.ets.org/toefl.html", category:"International Tests", langs:["en"] },
                          { name:"IELTS (Official)", url:"https://ielts.org/", category:"International Tests", langs:["en"] },
                          { name:"SAT — College Board", url:"https://satsuite.collegeboard.org/sat", category:"International Tests", langs:["en"] },
                          { name:"GRE — ETS", url:"https://www.ets.org/gre.html", category:"International Tests", langs:["en"] },
                          { name:"GMAT — mba.com", url:"https://www.mba.com/exams/gmat-exam", category:"International Tests", langs:["en"] },
                          { name:"PTE Academic — Pearson", url:"https://www.pearsonpte.com/pte-academic", category:"International Tests", langs:["en"] },
                          { name:"Duolingo English Test", url:"https://englishtest.duolingo.com/", category:"International Tests", langs:["en"] },

                          /* --- Best AI Courses (starter list) --- */
                          { name:"DeepLearning.AI — All AI Courses", url:"https://www.deeplearning.ai/courses/", category:"Best AI Courses", langs:["en"] },
                          { name:"Andrew Ng — Machine Learning Specialization (Coursera)", url:"https://www.coursera.org/specializations/machine-learning-introduction", category:"Best AI Courses", langs:["en"] },
                          { name:"Google — Machine Learning Crash Course (free)", url:"https://developers.google.com/machine-learning/crash-course", category:"Best AI Courses", langs:["en"] },
                          { name:"MIT 6.S191 — Intro to Deep Learning (free)", url:"https://introtodeeplearning.com/", category:"Best AI Courses", langs:["en"] },
                          { name:"fast.ai — Practical Deep Learning (free)", url:"https://course.fast.ai/", category:"Best AI Courses", langs:["en"] }
                        ];
                    }

                    /* ========= UI STRINGS (EN/AR) ========= */
                    const EH_STR = {
                      en: {
                        title: "Education Hub • Arabic & English",
                        searchPh: "Search (e.g., Edraak, TOEFL, AI, Tripoli)…",
                        noMatch: "No matches. Try another keyword or switch category.",
                        tags: { ar:"Arabic", en:"English" }
                      },
                      ar: {
                        title: "بوابة التعليم • عربي وإنجليزي",
                        searchPh: "ابحث (مثال: إدراك، توفل، ذكاء اصطناعي، طرابلس)…",
                        noMatch: "لا توجد نتائج. جرّب كلمة أخرى أو غيّر التصنيف.",
                        tags: { ar:"عربي", en:"إنجليزي" }
                      }
                    };

                    // Initialize Education Hub functionality
                    function initEducationHub() {
                        const grid = document.getElementById("eh-grid");
                        const searchInput = document.getElementById("eh-search");
                        const filterSel = document.getElementById("eh-filter");
                        const langSel = document.getElementById("eh-lang");
                        const titleEl = document.getElementById("eh-title");

                        if (!grid || !searchInput || !filterSel || !langSel || !titleEl) return;

                        function tagLabel(code){ return EH_STR[langSel.value].tags[code] || code; }

                        function render(list){
                          grid.innerHTML = "";
                          if(!list.length){
                            grid.innerHTML = `<div class="eh-empty">${EH_STR[langSel.value].noMatch}</div>`;
                            return;
                          }
                          for(const s of list){
                            const el = document.createElement("article");
                            el.className = "eh-card";
                            el.setAttribute("role","listitem");
                            el.innerHTML = `
                              <div class="eh-name">${s.name}</div>
                              <div class="eh-cat">${s.category}</div>
                              <div class="eh-link"><a href="${s.url}" target="_blank" rel="noopener">${s.url}</a></div>
                              <div class="eh-tags">${(s.langs||[]).map(l=>`<span class="tag">${tagLabel(l)}</span>`).join("")}</div>
                            `;
                            grid.appendChild(el);
                          }
                        }

                        function apply(){
                          const q = searchInput.value.trim().toLowerCase();
                          const cat = filterSel.value;
                          const out = window.EH_ITEMS.filter(s=>{
                            const inCat = (cat === "all") || (s.category === cat);
                            const inText = !q || (s.name.toLowerCase().includes(q) || s.url.toLowerCase().includes(q));
                            return inCat && inText;
                          });
                          render(out);
                        }

                        function setUILang(){
                          const L = EH_STR[langSel.value] || EH_STR.en;
                          titleEl.textContent = L.title;
                          searchInput.placeholder = L.searchPh;
                          apply();
                        }

                        // Remove existing listeners to prevent duplicates
                        searchInput.removeEventListener("input", apply);
                        filterSel.removeEventListener("change", apply);
                        langSel.removeEventListener("change", setUILang);
                        
                        // Add fresh listeners
                        searchInput.addEventListener("input", apply);
                        filterSel.addEventListener("change", apply);
                        langSel.addEventListener("change", setUILang);

                        setUILang(); // init + render
                    }

                    // Store function globally
                    window.initEducationHub = initEducationHub;
                  </script>
                </section>
            </div>
        </div>
    </div>

    <!-- Weather Services Modal -->
    <div id="weatherModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
        <div class="bg-white dark:bg-gray-800 rounded-2xl max-w-7xl w-full max-h-[95vh] overflow-hidden relative">
            <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white">🌤️ Libya Weather Services</h2>
                <button onclick="closeWeatherModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <div class="overflow-y-auto max-h-[calc(95vh-80px)]">
                <!-- Weather Content -->
                <div class="p-6 space-y-6">
                    
                    <!-- Quick Weather Info -->
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-4 mb-6">
                        <div class="bg-gradient-to-br from-blue-500 to-blue-600 text-white p-4 rounded-xl">
                            <div class="flex items-center justify-between">
                                <div>
                                    <h3 class="font-semibold text-lg">Tripoli</h3>
                                    <p class="text-blue-100 text-sm">Capital Region</p>
                                </div>
                                <div class="text-right">
                                    <div class="text-2xl font-bold">23°C</div>
                                    <div class="text-blue-100 text-sm">Sunny</div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="bg-gradient-to-br from-green-500 to-green-600 text-white p-4 rounded-xl">
                            <div class="flex items-center justify-between">
                                <div>
                                    <h3 class="font-semibold text-lg">Benghazi</h3>
                                    <p class="text-green-100 text-sm">Eastern Region</p>
                                </div>
                                <div class="text-right">
                                    <div class="text-2xl font-bold">25°C</div>
                                    <div class="text-green-100 text-sm">Clear</div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="bg-gradient-to-br from-orange-500 to-orange-600 text-white p-4 rounded-xl">
                            <div class="flex items-center justify-between">
                                <div>
                                    <h3 class="font-semibold text-lg">Sabha</h3>
                                    <p class="text-orange-100 text-sm">Southern Region</p>
                                </div>
                                <div class="text-right">
                                    <div class="text-2xl font-bold">31°C</div>
                                    <div class="text-orange-100 text-sm">Hot</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Interactive Weather Map -->
                    <div class="bg-gray-50 dark:bg-gray-700 p-6 rounded-xl">
                        <div class="flex items-center justify-between mb-4">
                            <h3 class="text-xl font-bold text-gray-900 dark:text-white">📍 Interactive Weather Map</h3>
                            <div class="flex items-center gap-2 text-sm text-gray-600 dark:text-gray-300">
                                <span class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full">Live Data</span>
                                <span class="px-3 py-1 bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 rounded-full">Interactive</span>
                            </div>
                        </div>
                        
                        <p class="text-gray-600 dark:text-gray-300 mb-4">
                            Explore real-time weather conditions across Libya with radar, satellite imagery, and forecasts. 
                            Use the controls to switch between different weather layers and zoom to your location.
                        </p>

                        <!-- Windy embed: live interactive weather map -->
                        <div style="position:relative;padding-bottom:60%;height:0;overflow:hidden;border-radius:16px;box-shadow:0 4px 6px -1px rgba(0, 0, 0, 0.1)">
                          <iframe
                            src="https://embed.windy.com/embed2.html?lat=32.887&lon=13.191&zoom=6&level=surface&overlay=radar&menu=true&message=true&marker=true&calendar=now&pressure=true&type=map&location=coordinates&detail=true&detailLat=32.887&detailLon=13.191&metricWind=kt&metricTemp=%C2%B0C"
                            style="position:absolute;top:0;left:0;width:100%;height:100%;border:0"
                            title="Windy Weather Map"
                            loading="lazy"
                            referrerpolicy="no-referrer-when-downgrade"
                            allowfullscreen>
                          </iframe>
                        </div>
                    </div>

                    <!-- Weather Features -->
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        <div class="bg-white dark:bg-gray-700 p-4 rounded-xl border border-gray-200 dark:border-gray-600">
                            <div class="text-2xl mb-2">🌡️</div>
                            <h4 class="font-semibold text-gray-900 dark:text-white mb-1">Temperature</h4>
                            <p class="text-sm text-gray-600 dark:text-gray-300">Real-time temperature readings across all Libya regions</p>
                        </div>
                        
                        <div class="bg-white dark:bg-gray-700 p-4 rounded-xl border border-gray-200 dark:border-gray-600">
                            <div class="text-2xl mb-2">🌧️</div>
                            <h4 class="font-semibold text-gray-900 dark:text-white mb-1">Precipitation</h4>
                            <p class="text-sm text-gray-600 dark:text-gray-300">Live radar showing rain, snow, and precipitation patterns</p>
                        </div>
                        
                        <div class="bg-white dark:bg-gray-700 p-4 rounded-xl border border-gray-200 dark:border-gray-600">
                            <div class="text-2xl mb-2">💨</div>
                            <h4 class="font-semibold text-gray-900 dark:text-white mb-1">Wind Patterns</h4>
                            <p class="text-sm text-gray-600 dark:text-gray-300">Wind speed, direction, and gusts visualization</p>
                        </div>
                        
                        <div class="bg-white dark:bg-gray-700 p-4 rounded-xl border border-gray-200 dark:border-gray-600">
                            <div class="text-2xl mb-2">🛰️</div>
                            <h4 class="font-semibold text-gray-900 dark:text-white mb-1">Satellite</h4>
                            <p class="text-sm text-gray-600 dark:text-gray-300">Live satellite imagery and cloud cover analysis</p>
                        </div>
                        
                        <div class="bg-white dark:bg-gray-700 p-4 rounded-xl border border-gray-200 dark:border-gray-600">
                            <div class="text-2xl mb-2">📅</div>
                            <h4 class="font-semibold text-gray-900 dark:text-white mb-1">7-Day Forecast</h4>
                            <p class="text-sm text-gray-600 dark:text-gray-300">Extended weather predictions for planning ahead</p>
                        </div>
                        
                        <div class="bg-white dark:bg-gray-700 p-4 rounded-xl border border-gray-200 dark:border-gray-600">
                            <div class="text-2xl mb-2">⚠️</div>
                            <h4 class="font-semibold text-gray-900 dark:text-white mb-1">Alerts</h4>
                            <p class="text-sm text-gray-600 dark:text-gray-300">Weather warnings and severe condition notifications</p>
                        </div>
                    </div>

                    <!-- Major Cities Quick Access -->
                    <div class="bg-white dark:bg-gray-700 p-6 rounded-xl border border-gray-200 dark:border-gray-600">
                        <h3 class="text-lg font-bold text-gray-900 dark:text-white mb-4">🏙️ Major Cities</h3>
                        <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-3">
                            <button class="p-3 text-center bg-gray-50 dark:bg-gray-600 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" onclick="focusCity(32.8872, 13.1913)">
                                <div class="font-medium text-sm text-gray-900 dark:text-white">Tripoli</div>
                            </button>
                            <button class="p-3 text-center bg-gray-50 dark:bg-gray-600 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" onclick="focusCity(32.1151, 20.0680)">
                                <div class="font-medium text-sm text-gray-900 dark:text-white">Benghazi</div>
                            </button>
                            <button class="p-3 text-center bg-gray-50 dark:bg-gray-600 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" onclick="focusCity(32.7569, 22.0081)">
                                <div class="font-medium text-sm text-gray-900 dark:text-white">Tobruk</div>
                            </button>
                            <button class="p-3 text-center bg-gray-50 dark:bg-gray-600 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" onclick="focusCity(27.0377, 14.2612)">
                                <div class="font-medium text-sm text-gray-900 dark:text-white">Sabha</div>
                            </button>
                            <button class="p-3 text-center bg-gray-50 dark:bg-gray-600 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" onclick="focusCity(31.2051, 16.5988)">
                                <div class="font-medium text-sm text-gray-900 dark:text-white">Misrata</div>
                            </button>
                            <button class="p-3 text-center bg-gray-50 dark:bg-gray-600 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" onclick="focusCity(32.3350, 15.0965)">
                                <div class="font-medium text-sm text-gray-900 dark:text-white">Zawiya</div>
                            </button>
                        </div>
                        <p class="text-xs text-gray-500 dark:text-gray-400 mt-3">Click any city to center the map on that location</p>
                    </div>

                    <!-- Weather Tips -->
                    <div class="bg-gradient-to-r from-cyan-50 to-blue-50 dark:from-cyan-900/20 dark:to-blue-900/20 p-6 rounded-xl border border-cyan-200 dark:border-cyan-700">
                        <h3 class="text-lg font-bold text-gray-900 dark:text-white mb-3">💡 Weather Tips</h3>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                            <div>
                                <p class="text-gray-700 dark:text-gray-300"><strong>Best time to visit:</strong> March-May and September-November for mild temperatures</p>
                            </div>
                            <div>
                                <p class="text-gray-700 dark:text-gray-300"><strong>Summer heat:</strong> Temperatures can exceed 45°C in inland areas during July-August</p>
                            </div>
                            <div>
                                <p class="text-gray-700 dark:text-gray-300"><strong>Coastal areas:</strong> Generally more moderate due to Mediterranean influence</p>
                            </div>
                            <div>
                                <p class="text-gray-700 dark:text-gray-300"><strong>Sandstorms:</strong> Most common during spring months, especially in southern regions</p>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <!-- Government Websites Modal -->
    <div id="govModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
        <div class="bg-white dark:bg-gray-800 rounded-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden relative">
            <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white">🏛️ Libya Government Websites</h2>
                <button onclick="closeGovModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <div class="overflow-y-auto max-h-[calc(90vh-80px)]">
                <!-- Libya Government Links Widget -->
                <section id="libya-gov-links" class="libya-gov-links">
                  <style>
                    .libya-gov-links{--bg:transparent;--card:#f8fafc;--text:#1e293b;--muted:#64748b;--accent:#2563eb;--ring:#2563eb33;font-family:system-ui,-apple-system,Segoe UI,Roboto,Inter,Arial,sans-serif;background:var(--bg);color:var(--text);padding:28px;border-radius:18px}
                    .dark .libya-gov-links{--card:#1e293b;--text:#e2e8f0;--muted:#94a3b8;--accent:#3b82f6;--ring:#3b82f633}
                    .lg-header{display:flex;gap:12px;flex-wrap:wrap;align-items:center;justify-content:space-between;margin-bottom:18px}
                    .lg-title{font-weight:700;font-size:1.15rem;letter-spacing:.2px}
                    .lg-controls{display:flex;flex-wrap:wrap;gap:10px}
                    .lg-input,.lg-select{background:var(--card);border:1px solid #e2e8f0;color:var(--text);padding:10px 12px;border-radius:12px;min-width:220px;outline:none}
                    .dark .lg-input,.dark .lg-select{border-color:#374151}
                    .lg-input:focus,.lg-select:focus{border-color:var(--accent);box-shadow:0 0 0 3px var(--ring)}
                    .lg-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(240px,1fr));gap:12px}
                    .lg-card{background:var(--card);border:1px solid #e2e8f0;border-radius:14px;padding:14px;display:flex;flex-direction:column;gap:8px;transition:transform .1s ease, border-color .2s ease}
                    .dark .lg-card{border-color:#374151}
                    .lg-card:hover{transform:translateY(-2px);border-color:var(--accent)}
                    .lg-name{font-weight:600;line-height:1.2}
                    .lg-cat{font-size:.8rem;color:var(--muted)}
                    .lg-link{margin-top:2px}
                    .lg-link a{color:var(--accent);text-decoration:none;word-break:break-all}
                    .lg-empty{opacity:.8;padding:18px;text-align:center;border:1px dashed #cbd5e1;border-radius:12px}
                    .dark .lg-empty{border-color:#4b5563}
                    .lg-footer{margin-top:14px;font-size:.82rem;color:var(--muted);display:flex;gap:12px;flex-wrap:wrap;align-items:center}
                    .pill{border:1px solid #e2e8f0;border-radius:999px;padding:6px 10px}
                    .dark .pill{border-color:#374151}
                    @media (max-width:520px){.lg-controls{width:100%}.lg-input,.lg-select{flex:1}}
                  </style>

                  <div class="lg-header">
                    <div class="lg-title">Official Government Websites</div>
                    <div class="lg-controls">
                      <input id="lg-search" class="lg-input" type="search" placeholder="Search (e.g., Interior, Finance, Health, NOC)…" />
                      <select id="lg-filter" class="lg-select">
                        <option value="all">All categories</option>
                        <option>Government</option>
                        <option>Ministry</option>
                        <option>Authority/Commission</option>
                        <option>Agency</option>
                        <option>Finance/Energy</option>
                        <option>Media</option>
                        <option>Portal/Service</option>
                      </select>
                    </div>
                  </div>

                  <div id="lg-grid" class="lg-grid" role="list"></div>

                  <div class="lg-footer">
                    <span class="pill">Last updated: 2025-08-15</span>
                    <span class="pill">Tip: If a site is down, try again later or use the organization's social page.</span>
                  </div>

                  <script>
                    // Define LG_SITES globally so it can be accessed
                    if (!window.LG_SITES) {
                        window.LG_SITES = [
                          /* Government / Executive */
                          { name:"Government of National Unity (GNU)", url:"https://gnu.gov.ly", category:"Government" },
                          { name:"Prime Minister's Office", url:"https://pm.gov.ly", category:"Government" },

                          /* Ministries */
                          { name:"Ministry of Foreign Affairs & International Cooperation", url:"https://foreign.gov.ly", category:"Ministry" },
                          { name:"Ministry of Interior – Main", url:"https://moi.gov.ly", category:"Ministry" },
                          { name:"Ministry of Justice", url:"https://aladel.gov.ly/home/", category:"Ministry" },
                          { name:"Ministry of Planning", url:"https://www.planning.gov.ly", category:"Ministry" },
                          { name:"Ministry of Finance", url:"https://mof.gov.ly", category:"Ministry" },
                          { name:"Ministry of Economy & Trade", url:"https://economy.gov.ly", category:"Ministry" },
                          { name:"Ministry of Industry & Minerals", url:"https://industry.gov.ly", category:"Ministry" },
                          { name:"Ministry of Transport", url:"https://mot.gov.ly", category:"Ministry" },
                          { name:"Ministry of Health", url:"https://moh.gov.ly", category:"Ministry" },
                          { name:"Ministry of Education (Basic/Secondary)", url:"https://moe.gov.ly", category:"Ministry" },
                          { name:"Ministry of Technical & Vocational Education", url:"https://www.mtve-gov.ly", category:"Ministry" },
                          { name:"Ministry of Environment", url:"https://environment.gov.ly", category:"Ministry" },

                          /* Authorities / Commissions */
                          { name:"General Authority of Information (GIA)", url:"https://www.gia.gov.ly/en/gia-en/", category:"Authority/Commission" },
                          { name:"Administrative Control Authority (ACA)", url:"https://www.aca.gov.ly", category:"Authority/Commission" },
                          { name:"High National Elections Commission (HNEC)", url:"https://hnec.ly", category:"Authority/Commission" },
                          { name:"General Water Authority (GWA)", url:"http://www.gwa.ly", category:"Authority/Commission" },
                          { name:"General Authority of Communications & Informatics (GACI)", url:"https://gaci.gov.ly", category:"Authority/Commission" },

                          /* Agencies / Sector bodies */
                          { name:"Libyan Civil Aviation Authority (CAA)", url:"https://caa.gov.ly", category:"Agency" },
                          { name:"Aircraft Accident & Incident Investigation Bureau (AAIB)", url:"https://aaib.mot.gov.ly", category:"Agency" },
                          { name:"National Center for Disease Control (NCDC)", url:"https://ncdc.org.ly/Ar/", category:"Agency" },
                          { name:"Passports, Nationality & Foreigners Affairs (LPA – MOI)", url:"https://lpa.gov.ly/en/", category:"Agency" },

                          /* Finance / Energy / SOEs */
                          { name:"Central Bank of Libya (CBL)", url:"https://cbl.gov.ly/en/", category:"Finance/Energy" },
                          { name:"National Oil Corporation (NOC)", url:"https://noc.ly", category:"Finance/Energy" },

                          /* Media (state) */
                          { name:"Libyan News Agency (LANA)", url:"https://lana.gov.ly", category:"Media" },

                          /* Portals / Services */
                          { name:"MOI e-Services Portal", url:"https://es.moi.gov.ly", category:"Portal/Service" },
                          { name:"eJraat • Libya Business Procedures (MoET + GIA)", url:"https://ejraat.gov.ly", category:"Portal/Service" },
                          { name:"Libya Trade Network (MoET)", url:"https://ltnet.gov.ly/en/", category:"Portal/Service" },
                          { name:"Education Data System (MOE)", url:"https://sis.moe.gov.ly", category:"Portal/Service" }
                        ];
                    }

                    // Initialize government widget functionality
                    function initGovWidget() {
                        const grid = document.getElementById("lg-grid");
                        const searchInput = document.getElementById("lg-search");
                        const filterSel = document.getElementById("lg-filter");

                        if (!grid || !searchInput || !filterSel) return;

                        function render(list){
                          grid.innerHTML = "";
                          if(!list.length){
                            grid.innerHTML = `<div class="lg-empty">No matches. Try another keyword or switch category.</div>`;
                            return;
                          }
                          for(const s of list){
                            const el = document.createElement("article");
                            el.className = "lg-card";
                            el.setAttribute("role","listitem");
                            el.innerHTML = `
                              <div class="lg-name">${s.name}</div>
                              <div class="lg-cat">${s.category}</div>
                              <div class="lg-link"><a href="${s.url}" target="_blank" rel="noopener"> ${s.url}</a></div>
                            `;
                            grid.appendChild(el);
                          }
                        }

                        function apply(){
                          const q = searchInput.value.trim().toLowerCase();
                          const cat = filterSel.value;
                          const out = window.LG_SITES.filter(s=>{
                            const inCat = (cat === "all") || (s.category === cat);
                            const inText = !q || (s.name.toLowerCase().includes(q) || s.url.toLowerCase().includes(q));
                            return inCat && inText;
                          });
                          render(out);
                        }

                        // Remove existing listeners to prevent duplicates
                        searchInput.removeEventListener("input", apply);
                        filterSel.removeEventListener("change", apply);
                        
                        // Add fresh listeners
                        searchInput.addEventListener("input", apply);
                        filterSel.addEventListener("change", apply);
                        
                        // Initial render
                        render(window.LG_SITES);
                    }

                    // Store function globally
                    window.initGovWidget = initGovWidget;
                  </script>
                </section>
            </div>
        </div>
    </div>

    <!-- Sample Modal for other apps -->
    <div id="sampleModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white dark:bg-gray-800 rounded-2xl p-8 max-w-md mx-4 relative">
            <button onclick="closeSampleModal()" class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
            <div class="text-center">
                <div class="text-4xl mb-4">🚀</div>
                <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Coming Soon!</h3>
                <p class="text-gray-600 dark:text-gray-400 mb-6">This app is currently under development. Check back soon!</p>
                <button onclick="closeSampleModal()" class="px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-200">
                    Got it
                </button>
            </div>
        </div>
    </div>

    <script>
        // Dark mode functionality
        function toggleDarkMode() {
            document.documentElement.classList.toggle('dark');
            const icon = document.getElementById('darkModeIcon');
            if (document.documentElement.classList.contains('dark')) {
                icon.textContent = '☀️';
                localStorage.setItem('darkMode', 'true');
            } else {
                icon.textContent = '🌙';
                localStorage.setItem('darkMode', 'false');
            }
        }

        // Initialize dark mode
        if (localStorage.getItem('darkMode') === 'true') {
            document.documentElement.classList.add('dark');
            document.getElementById('darkModeIcon').textContent = '☀️';
        }

        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const cards = document.querySelectorAll('.app-card');
            let hasResults = false;

            cards.forEach(card => {
                const title = card.querySelector('.font-bold').textContent.toLowerCase();
                const description = card.querySelector('.text-xs').textContent.toLowerCase();
                
                if (title.includes(searchTerm) || description.includes(searchTerm)) {
                    card.style.display = 'block';
                    hasResults = true;
                } else {
                    card.style.display = 'none';
                }
            });

            document.getElementById('noResults').classList.toggle('hidden', hasResults);
        });

        // Category filtering
        document.querySelectorAll('.category-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const category = this.dataset.category;
                
                // Update button states
                document.querySelectorAll('.category-btn').forEach(b => {
                    b.classList.remove('bg-libya-red', 'text-white');
                    b.classList.add('bg-gray-200', 'dark:bg-gray-700', 'text-gray-700', 'dark:text-gray-300');
                });
                this.classList.add('bg-libya-red', 'text-white');
                this.classList.remove('bg-gray-200', 'dark:bg-gray-700', 'text-gray-700', 'dark:text-gray-300');

                // Filter cards
                const cards = document.querySelectorAll('.app-card');
                let hasResults = false;

                cards.forEach(card => {
                    if (category === 'all' || card.dataset.category === category) {
                        card.style.display = 'block';
                        hasResults = true;
                    } else {
                        card.style.display = 'none';
                    }
                });

                document.getElementById('noResults').classList.toggle('hidden', hasResults);
            });
        });

        // Business Directory modal functions
        function openBusinessModal() {
            document.getElementById('businessModal').classList.remove('hidden');
            document.getElementById('businessModal').classList.add('flex');
            // Initialize the business directory after modal is visible
            setTimeout(() => {
                if (window.initBusinessDirectory) {
                    window.initBusinessDirectory();
                }
            }, 100);
        }

        function closeBusinessModal() {
            document.getElementById('businessModal').classList.add('hidden');
            document.getElementById('businessModal').classList.remove('flex');
        }

        // Prayer Times modal functions
        function openPrayerModal() {
            document.getElementById('prayerModal').classList.remove('hidden');
            document.getElementById('prayerModal').classList.add('flex');
            // Initialize the prayer widget after modal is visible
            setTimeout(() => {
                if (window.initPrayerWidget) {
                    window.initPrayerWidget();
                }
            }, 100);
        }

        function closePrayerModal() {
            document.getElementById('prayerModal').classList.add('hidden');
            document.getElementById('prayerModal').classList.remove('flex');
        }

        // Banks & ATMs modal functions
        function openBanksModal() {
            document.getElementById('banksModal').classList.remove('hidden');
            document.getElementById('banksModal').classList.add('flex');
            // Initialize the banks widget after modal is visible
            setTimeout(() => {
                if (window.initBanksWidget) {
                    window.initBanksWidget();
                }
            }, 100);
        }

        function closeBanksModal() {
            document.getElementById('banksModal').classList.add('hidden');
            document.getElementById('banksModal').classList.remove('flex');
        }

        // Job Hub modal functions
        function openJobModal() {
            document.getElementById('jobModal').classList.remove('hidden');
            document.getElementById('jobModal').classList.add('flex');
            // Initialize the job hub widget after modal is visible
            setTimeout(() => {
                if (window.initJobHub) {
                    window.initJobHub();
                }
            }, 100);
        }

        function closeJobModal() {
            document.getElementById('jobModal').classList.add('hidden');
            document.getElementById('jobModal').classList.remove('flex');
        }

        // Education Hub modal functions
        function openEducationModal() {
            document.getElementById('educationModal').classList.remove('hidden');
            document.getElementById('educationModal').classList.add('flex');
            // Initialize the education hub widget after modal is visible
            setTimeout(() => {
                if (window.initEducationHub) {
                    window.initEducationHub();
                }
            }, 100);
        }

        function closeEducationModal() {
            document.getElementById('educationModal').classList.add('hidden');
            document.getElementById('educationModal').classList.remove('flex');
        }

        // Weather modal functions
        function openWeatherModal() {
            document.getElementById('weatherModal').classList.remove('hidden');
            document.getElementById('weatherModal').classList.add('flex');
        }

        function closeWeatherModal() {
            document.getElementById('weatherModal').classList.add('hidden');
            document.getElementById('weatherModal').classList.remove('flex');
        }

        // Focus on specific city in weather map
        function focusCity(lat, lon) {
            // Update the iframe src to focus on the selected city
            const iframe = document.querySelector('#weatherModal iframe');
            if (iframe) {
                const newSrc = `https://embed.windy.com/embed2.html?lat=${lat}&lon=${lon}&zoom=8&level=surface&overlay=radar&menu=true&message=true&marker=true&calendar=now&pressure=true&type=map&location=coordinates&detail=true&detailLat=${lat}&detailLon=${lon}&metricWind=kt&metricTemp=%C2%B0C`;
                iframe.src = newSrc;
            }
        }

        // Government modal functions
        function openGovModal() {
            document.getElementById('govModal').classList.remove('hidden');
            document.getElementById('govModal').classList.add('flex');
            // Initialize the government links widget after modal is visible
            setTimeout(() => {
                if (window.initGovWidget) {
                    window.initGovWidget();
                }
            }, 100);
        }

        function closeGovModal() {
            document.getElementById('govModal').classList.add('hidden');
            document.getElementById('govModal').classList.remove('flex');
        }

        // Sample modal functions (for other apps)
        function openSampleModal() {
            document.getElementById('sampleModal').classList.remove('hidden');
            document.getElementById('sampleModal').classList.add('flex');
        }

        function closeSampleModal() {
            document.getElementById('sampleModal').classList.add('hidden');
            document.getElementById('sampleModal').classList.remove('flex');
        }

        // App opening functions
        function openCurrencyApp() { openSampleModal(); }
        function openPriceApp() { openSampleModal(); }
        function openClinicApp() { openSampleModal(); }
        function openJobsApp() { openJobModal(); }
        function openPrayerApp() { openPrayerModal(); }
        function openWeatherApp() { openWeatherModal(); }
        function openGovApp() { openGovModal(); }
        function openBusinessApp() { openBusinessModal(); }
        function openNewsApp() { openSampleModal(); }
        function openEducationApp() { openEducationModal(); }
        function openSpeedApp() { openSampleModal(); }
        function openBanksApp() { openBanksModal(); }
        function openEmergencyApp() { openSampleModal(); }
        function openTranslatorApp() { openSampleModal(); }

        // Close modals when clicking outside
        document.getElementById('sampleModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeSampleModal();
            }
        });

        document.getElementById('govModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeGovModal();
            }
        });

        document.getElementById('weatherModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeWeatherModal();
            }
        });

        document.getElementById('educationModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeEducationModal();
            }
        });

        document.getElementById('jobModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeJobModal();
            }
        });

        document.getElementById('banksModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeBanksModal();
            }
        });

        document.getElementById('prayerModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closePrayerModal();
            }
        });

        document.getElementById('businessModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeBusinessModal();
            }
        });
    </script>

    <!-- Include the i18n script -->
    <script>
/* ====== LibyaApps.com • Site-wide i18n (EN/FR/AR/TR) ======
   Paste just before </body>. It:
   - Injects a language <select> in the header (next to dark mode)
   - Translates headers, placeholders, category chips, app cards, footer, etc.
   - Switches RTL for Arabic
   - Persists choice via localStorage ("siteLang")
   - Nudges widgets' own language selectors (Translator/Prayer/Education)
============================================================ */

(function () {
  const LANGS = ["en", "fr", "ar", "tr"];
  const LS_KEY = "siteLang";

  // --- Strings (edit here to customize) ---
  const STRINGS = {
    en: {
      title: "LibyaApps.com - Apps Made for Libya",
      brand: "LibyaApps.com",
      tagline: "Apps made for Libya. Free. No App Store Needed.",
      search_ph: "Search apps...",
      cats: { all: "All", finance: "Finance", utilities: "Utilities", lifestyle: "Lifestyle", government: "Government" },
      nores_h: "No apps found",
      nores_p: "Try adjusting your search or filter",
      footer_p1: "© 2025 LibyaApps.com | Powered by Victory Hour Multimedia Inc.™",
      footer_p2: "Made with ❤️ for Libya",

      // Cards (grid order-based)
      cards: {
        currency: { t: "Currency Exchange", s: "Live Rates", sub: "—" },
        price:    { t: "Price Watch", s: "Updated Daily", sub: "—" },
        clinic:   { t: "Clinic Finder", s: "Emergency Ready", sub: "—" },
        jobs:     { t: "Job Finder", s: "Libya + Global", sub: "—" },
        prayer:   { t: "Prayer Times", s: "EN/AR + Countdown", sub: "—" },
        weather:  { t: "Weather Forecast", s: "Interactive Map", sub: "—" },
        gov:      { t: "Government Websites", s: "Official Links", sub: "—" },
        business: { t: "Business Directory", s: "60+ Companies", sub: "—" },
        news:     { t: "News Filter", s: "Latest Updates", sub: "—" },
        education:{ t: "Education Hub", s: "Universities & Courses", sub: "—" },
        speed:    { t: "Speed Test", s: "Free Test", sub: "—" },
        banks:    { t: "Banks & ATMs", s: "20+ Banks + ATM Locator", sub: "—" },
        emergency:{ t: "Emergency Contacts", s: "Quick Access", sub: "—" },
        translator:{ t:"Translator", s: "7 UI Languages + RTL", sub:"—" }
      }
    },

    fr: {
      title: "LibyaApps.com - Applications conçues pour la Libye",
      brand: "LibyaApps.com",
      tagline: "Applications faites pour la Libye. Gratuites. Sans App Store.",
      search_ph: "Rechercher des apps…",
      cats: { all: "Tous", finance: "Finances", utilities: "Services", lifestyle: "Style de vie", government: "Gouvernement" },
      nores_h: "Aucune application trouvée",
      nores_p: "Essayez d'ajuster votre recherche ou vos filtres",
      footer_p1: "© 2025 LibyaApps.com | Propulsé par Victory Hour Multimedia Inc.™",
      footer_p2: "Fait avec ❤️ pour la Libye",

      cards: {
        currency: { t: "Taux de change", s: "Cours en direct", sub:"—" },
        price:    { t: "Surveillance des prix", s: "Mise à jour quotidienne", sub:"—" },
        clinic:   { t: "Recherche de cliniques", s: "Prêt pour les urgences", sub:"—" },
        jobs:     { t: "Offres d'emploi", s: "Libye + Monde", sub:"—" },
        prayer:   { t: "Horaires de prière", s: "EN/AR + compte à rebours", sub:"—" },
        weather:  { t: "Prévisions météo", s: "Carte interactive", sub:"—" },
        gov:      { t: "Sites gouvernementaux", s: "Liens officiels", sub:"—" },
        business: { t: "Annuaire des entreprises", s: "60+ entreprises", sub:"—" },
        news:     { t: "Filtre d'actualités", s: "Dernières mises à jour", sub:"—" },
        education:{ t: "Pôle Éducation", s: "Universités & cours", sub:"—" },
        speed:    { t: "Test de vitesse", s: "Test gratuit", sub:"—" },
        banks:    { t: "Banques & DAB", s: "20+ banques + localisateur", sub:"—" },
        emergency:{ t: "Contacts d'urgence", s: "Accès rapide", sub:"—" },
        translator:{ t:"Traducteur", s:"7 langues UI + RTL", sub:"—" }
      }
    },

    ar: {
      title: "LibyaApps.com - تطبيقات صُمِّمت لليبيا",
      brand: "LibyaApps.com",
      tagline: "تطبيقات مجانية لليبيا — دون الحاجة إلى متجر تطبيقات.",
      search_ph: "ابحث في التطبيقات…",
      cats: { all: "الكل", finance: "المالية", utilities: "الخدمات", lifestyle: "نمط الحياة", government: "حكومية" },
      nores_h: "لا توجد تطبيقات",
      nores_p: "جرّب تعديل البحث أو الفلاتر",
      footer_p1: "© 2025 LibyaApps.com | بدعم من Victory Hour Multimedia Inc.™",
      footer_p2: "صُنع بحب لليبيا ❤️",

      cards: {
        currency: { t: "صرف العملات", s: "أسعار مباشرة", sub:"—" },
        price:    { t: "مراقبة الأسعار", s: "تحديث يومي", sub:"—" },
        clinic:   { t: "دليل العيادات", s: "جاهز للطوارئ", sub:"—" },
        jobs:     { t: "البحث عن وظائف", s: "ليبيا + عالمي", sub:"—" },
        prayer:   { t: "أوقات الصلاة", s: "إنجليزي/عربي + عد تنازلي", sub:"—" },
        weather:  { t: "حالة الطقس", s: "خريطة تفاعلية", sub:"—" },
        gov:      { t: "المواقع الحكومية", s: "روابط رسمية", sub:"—" },
        business: { t: "دليل الأعمال", s: "أكثر من 60 شركة", sub:"—" },
        news:     { t: "مرشح الأخبار", s: "آخر التحديثات", sub:"—" },
        education:{ t: "بوابة التعليم", s: "جامعات ودورات", sub:"—" },
        speed:    { t: "اختبار السرعة", s: "اختبار مجاني", sub:"—" },
        banks:    { t: "البنوك والصرافات", s: "20+ بنك + محدد مواقع", sub:"—" },
        emergency:{ t: "أرقام الطوارئ", s: "وصول سريع", sub:"—" },
        translator:{ t:"الترجمة", s:"7 لغات للواجهة + دعم RTL", sub:"—" }
      }
    },

    tr: {
      title: "LibyaApps.com - Libya için üretilen uygulamalar",
      brand: "LibyaApps.com",
      tagline: "Libya için yapılmış uygulamalar. Ücretsiz. Mağaza gerekmez.",
      search_ph: "Uygulama ara…",
      cats: { all: "Tümü", finance: "Finans", utilities: "Hizmetler", lifestyle: "Yaşam", government: "Devlet" },
      nores_h: "Uygulama bulunamadı",
      nores_p: "Aramayı veya filtreleri değiştirin",
      footer_p1: "© 2025 LibyaApps.com | Victory Hour Multimedia Inc.™",
      footer_p2: "Libya için sevgiyle ❤️",

      cards: {
        currency: { t: "Döviz Kurları", s: "Canlı oranlar", sub:"—" },
        price:    { t: "Fiyat Takibi", s: "Günlük güncellenir", sub:"—" },
        clinic:   { t: "Klinik Bulucu", s: "Acil durum hazır", sub:"—" },
        jobs:     { t: "İş Bulucu", s: "Libya + Küresel", sub:"—" },
        prayer:   { t: "Namaz Vakitleri", s: "EN/AR + geri sayım", sub:"—" },
        weather:  { t: "Hava Durumu", s: "Etkileşimli harita", sub:"—" },
        gov:      { t: "Devlet Siteleri", s: "Resmî bağlantılar", sub:"—" },
        business: { t: "İş Rehberi", s: "60+ şirket", sub:"—" },
        news:     { t: "Haber Filtresi", s: "En güncel", sub:"—" },
        education:{ t: "Eğitim Merkezi", s: "Üniversiteler ve Kurslar", sub:"—" },
        speed:    { t: "Hız Testi", s: "Ücretsiz test", sub:"—" },
        banks:    { t: "Bankalar & ATM'ler", s: "20+ banka + bulucu", sub:"—" },
        emergency:{ t: "Acil Numaralar", s: "Hızlı erişim", sub:"—" },
        translator:{ t:"Çevirmen", s:"7 arayüz dili + RTL", sub:"—" }
      }
    }
  };

  // --- Helpers ---
  const $  = (s,root=document) => root.querySelector(s);
  const $$ = (s,root=document) => Array.from(root.querySelectorAll(s));
  const isRTL = lang => lang === "ar";

  // Make sure dark mode toggle exists (fallback)
  if (!window.toggleDarkMode) {
    window.toggleDarkMode = function () {
      document.documentElement.classList.toggle("dark");
      const icon = document.getElementById("darkModeIcon");
      if (icon) icon.textContent = document.documentElement.classList.contains("dark") ? "☀️" : "🌙";
    };
  }

  // Inject language selector in header
  function injectLangSelector(initLang) {
    const headerRight = document.querySelector("header .flex.justify-between.items-center");
    if (!headerRight) return;
    const btn = $("#darkModeIcon")?.closest("button");
    const wrap = document.createElement("div");
    wrap.className = "flex items-center gap-2";
    const sel = document.createElement("select");
    sel.id = "siteLang";
    sel.className = "p-2 rounded-lg bg-white/10 hover:bg-white/20 transition-colors duration-200";
    sel.innerHTML = `
      <option value="en">EN</option>
      <option value="fr">FR</option>
      <option value="ar">AR</option>
      <option value="tr">TR</option>`;
    sel.value = initLang;
    wrap.appendChild(sel);
    if (btn && btn.parentElement) {
      btn.parentElement.parentElement.insertBefore(wrap, btn.parentElement.nextSibling);
    } else {
      headerRight.appendChild(wrap);
    }
    sel.addEventListener("change", () => setLang(sel.value, true));
  }

  // Map grid cards by DOM order
  const CARD_KEYS = [
    "currency","price","clinic","jobs","prayer","weather",
    "gov","business","news","education","speed","banks","emergency","translator"
  ];

  function setLang(lang, persist) {
    if (!STRINGS[lang]) lang = "en";
    if (persist) localStorage.setItem(LS_KEY, lang);

    // lang + direction
    document.documentElement.lang = lang;
    document.documentElement.dir  = isRTL(lang) ? "rtl" : "ltr";

    const S = STRINGS[lang];

    // Title
    document.title = S.title;

    // Header: brand + tagline (we'll collapse to one line)
    const h1Span = document.querySelector("header h1 span");
    if (h1Span) h1Span.textContent = S.brand;

    const headerPs = $$("header .text-center p");
    if (headerPs[0]) headerPs[0].textContent = S.tagline;
    if (headerPs[1]) headerPs[1].style.display = "none"; // hide second bilingual line

    // Search placeholder
    const search = $("#searchInput");
    if (search) search.placeholder = `${S.search_ph}…`;

    // Category chips (expecting order: all, finance, utilities, lifestyle, government)
    const catBtns = $$(".category-btn");
    const catOrder = ["all","finance","utilities","lifestyle","government"];
    catBtns.forEach((b, i) => {
      const k = catOrder[i];
      if (!k) return;
      b.textContent = S.cats[k];
    });

    // Grid cards
    const gridCards = Array.from(document.querySelectorAll("#appsGrid > .app-card, #appsGrid > a.app-card"));
    gridCards.forEach((card, i) => {
      const key = CARD_KEYS[i];
      const def = S.cards[key];
      if (!def) return;
      const title = card.querySelector(".font-bold");
      const sub1  = card.querySelector(".text-xs.text-gray-500, .text-xs.dark\\:text-gray-400");
      const badge = card.querySelector(".text-xs.text-green-600, .text-xs.text-blue-600, .text-xs.text-purple-600, .text-xs.text-cyan-600, .text-xs.text-red-600, .dark\\:text-green-400, .dark\\:text-blue-400, .dark\\:text-purple-400, .dark\\:text-cyan-400, .dark\\:text-red-400");
      if (title) title.textContent = def.t;
      if (sub1)  sub1.textContent  = def.sub === "—" ? sub1.textContent : def.sub; // keep existing small Arabic if you like
      if (badge) badge.textContent = def.s;
    });

    // No results
    const noH = $("#noResults h3");
    const noP = $("#noResults p");
    if (noH) noH.textContent = S.nores_h;
    if (noP) noP.textContent = S.nores_p;

    // Footer
    const footerP = document.querySelectorAll("footer p");
    if (footerP[0]) footerP[0].textContent = S.footer_p1;
    if (footerP[1]) footerP[1].textContent = S.footer_p2;

    // Sync some widgets' own UI language (best-effort)
    // Translator modal
    const tUi = document.querySelector("#translatorModal #uiLang");
    if (tUi) {
      const map = { en:"en", fr:"fr", ar:"ar", tr:"tr" };
      if (map[lang]) { tUi.value = map[lang]; tUi.dispatchEvent(new Event("change")); }
    }
    // Prayer Times modal (supports EN/AR)
    const ptLang = document.querySelector("#prayerModal #lang");
    if (ptLang) { ptLang.value = (lang === "ar" ? "ar" : "en"); ptLang.dispatchEvent(new Event("change")); }
    // Education hub (supports EN/AR)
    const ehLang = document.querySelector("#educationModal #eh-lang");
    if (ehLang) { ehLang.value = (lang === "ar" ? "ar" : "en"); ehLang.dispatchEvent(new Event("change")); }
  }

  // Init on DOM ready
  function init() {
    const saved = localStorage.getItem(LS_KEY) || "en";
    injectLangSelector(saved);
    setLang(saved, false);
  }

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", init);
  } else {
    init();
  }
})();
    </script>

</body>
</html>
